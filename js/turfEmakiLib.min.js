!function(f){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=f();else if("function"==typeof define&&define.amd)define([],f);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).turf=f()}}(function(){return function(){return function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){return o(e[i][1][r]||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}}()({1:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant"),lineclip_1=require("./lib/lineclip");function clipPolygon(rings,bbox){for(var outRings=[],_i=0,rings_1=rings;_i<rings_1.length;_i++){var ring=rings_1[_i],clipped=lineclip_1.polygonclip(ring,bbox);clipped.length>0&&(clipped[0][0]===clipped[clipped.length-1][0]&&clipped[0][1]===clipped[clipped.length-1][1]||clipped.push(clipped[0]),clipped.length>=4&&outRings.push(clipped))}return outRings}exports.default=function(feature,bbox){var geom=invariant_1.getGeom(feature),type=geom.type,properties="Feature"===feature.type?feature.properties:{},coords=geom.coordinates;switch(type){case"LineString":case"MultiLineString":var lines_1=[];return"LineString"===type&&(coords=[coords]),coords.forEach(function(line){lineclip_1.lineclip(line,bbox,lines_1)}),1===lines_1.length?helpers_1.lineString(lines_1[0],properties):helpers_1.multiLineString(lines_1,properties);case"Polygon":return helpers_1.polygon(clipPolygon(coords,bbox),properties);case"MultiPolygon":return helpers_1.multiPolygon(coords.map(function(poly){return clipPolygon(poly,bbox)}),properties);default:throw new Error("geometry "+type+" not supported")}}},{"./lib/lineclip":2,"@turf/helpers":21,"@turf/invariant":22}],2:[function(require,module,exports){"use strict";function intersect(a,b,edge,bbox){return 8&edge?[a[0]+(b[0]-a[0])*(bbox[3]-a[1])/(b[1]-a[1]),bbox[3]]:4&edge?[a[0]+(b[0]-a[0])*(bbox[1]-a[1])/(b[1]-a[1]),bbox[1]]:2&edge?[bbox[2],a[1]+(b[1]-a[1])*(bbox[2]-a[0])/(b[0]-a[0])]:1&edge?[bbox[0],a[1]+(b[1]-a[1])*(bbox[0]-a[0])/(b[0]-a[0])]:null}function bitCode(p,bbox){var code=0;return p[0]<bbox[0]?code|=1:p[0]>bbox[2]&&(code|=2),p[1]<bbox[1]?code|=4:p[1]>bbox[3]&&(code|=8),code}Object.defineProperty(exports,"__esModule",{value:!0}),exports.lineclip=function(points,bbox,result){var i,codeB,lastCode,a,b,len=points.length,codeA=bitCode(points[0],bbox),part=[];for(result||(result=[]),i=1;i<len;i++){for(a=points[i-1],codeB=lastCode=bitCode(b=points[i],bbox);;){if(!(codeA|codeB)){part.push(a),codeB!==lastCode?(part.push(b),i<len-1&&(result.push(part),part=[])):i===len-1&&part.push(b);break}if(codeA&codeB)break;codeA?codeA=bitCode(a=intersect(a,b,codeA,bbox),bbox):codeB=bitCode(b=intersect(a,b,codeB,bbox),bbox)}codeA=lastCode}return part.length&&result.push(part),result},exports.polygonclip=function(points,bbox){var result,edge,prev,prevInside,i,p,inside;for(edge=1;edge<=8;edge*=2){for(result=[],prevInside=!(bitCode(prev=points[points.length-1],bbox)&edge),i=0;i<points.length;i++)(inside=!(bitCode(p=points[i],bbox)&edge))!==prevInside&&result.push(intersect(prev,p,edge,bbox)),inside&&result.push(p),prev=p,prevInside=inside;if(!(points=result).length)break}return result}},{}],3:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers");exports.default=function(bbox,options){void 0===options&&(options={});var west=Number(bbox[0]),south=Number(bbox[1]),east=Number(bbox[2]),north=Number(bbox[3]);if(6===bbox.length)throw new Error("@turf/bbox-polygon does not support BBox with 6 positions");var lowLeft=[west,south],topLeft=[west,north],topRight=[east,north],lowRight=[east,south];return helpers_1.polygon([[lowLeft,lowRight,topRight,topLeft,lowLeft]],options.properties,{bbox:bbox,id:options.id})}},{"@turf/helpers":21}],4:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var meta_1=require("@turf/meta");function bbox(geojson){var result=[1/0,1/0,-1/0,-1/0];return meta_1.coordEach(geojson,function(coord){result[0]>coord[0]&&(result[0]=coord[0]),result[1]>coord[1]&&(result[1]=coord[1]),result[2]<coord[0]&&(result[2]=coord[0]),result[3]<coord[1]&&(result[3]=coord[1])}),result}bbox.default=bbox,exports.default=bbox},{"@turf/meta":28}],5:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant");function bearing(start,end,options){if(void 0===options&&(options={}),!0===options.final)return function(start,end){var bear=bearing(end,start);return bear=(bear+180)%360}(start,end);var coordinates1=invariant_1.getCoord(start),coordinates2=invariant_1.getCoord(end),lon1=helpers_1.degreesToRadians(coordinates1[0]),lon2=helpers_1.degreesToRadians(coordinates2[0]),lat1=helpers_1.degreesToRadians(coordinates1[1]),lat2=helpers_1.degreesToRadians(coordinates2[1]),a=Math.sin(lon2-lon1)*Math.cos(lat2),b=Math.cos(lat1)*Math.sin(lat2)-Math.sin(lat1)*Math.cos(lat2)*Math.cos(lon2-lon1);return helpers_1.radiansToDegrees(Math.atan2(a,b))}exports.default=bearing},{"@turf/helpers":21,"@turf/invariant":22}],6:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var bbox_1=__importDefault(require("@turf/bbox")),boolean_point_in_polygon_1=__importDefault(require("@turf/boolean-point-in-polygon")),boolean_point_on_line_1=__importDefault(require("@turf/boolean-point-on-line")),invariant_1=require("@turf/invariant");function isPointInMultiPoint(multiPoint,pt){var i,output=!1;for(i=0;i<multiPoint.coordinates.length;i++)if(compareCoords(multiPoint.coordinates[i],pt.coordinates)){output=!0;break}return output}function isMultiPointInMultiPoint(multiPoint1,multiPoint2){for(var _i=0,_a=multiPoint2.coordinates;_i<_a.length;_i++){for(var coord2=_a[_i],matchFound=!1,_b=0,_c=multiPoint1.coordinates;_b<_c.length;_b++){if(compareCoords(coord2,_c[_b])){matchFound=!0;break}}if(!matchFound)return!1}return!0}function isMultiPointOnLine(lineString,multiPoint){for(var haveFoundInteriorPoint=!1,_i=0,_a=multiPoint.coordinates;_i<_a.length;_i++){var coord=_a[_i];if(boolean_point_on_line_1.default(coord,lineString,{ignoreEndVertices:!0})&&(haveFoundInteriorPoint=!0),!boolean_point_on_line_1.default(coord,lineString))return!1}return!!haveFoundInteriorPoint}function isMultiPointInPoly(polygon,multiPoint){for(var _i=0,_a=multiPoint.coordinates;_i<_a.length;_i++){var coord=_a[_i];if(!boolean_point_in_polygon_1.default(coord,polygon,{ignoreBoundary:!0}))return!1}return!0}function isLineOnLine(lineString1,lineString2){for(var haveFoundInteriorPoint=!1,_i=0,_a=lineString2.coordinates;_i<_a.length;_i++){var coords=_a[_i];if(boolean_point_on_line_1.default({type:"Point",coordinates:coords},lineString1,{ignoreEndVertices:!0})&&(haveFoundInteriorPoint=!0),!boolean_point_on_line_1.default({type:"Point",coordinates:coords},lineString1,{ignoreEndVertices:!1}))return!1}return haveFoundInteriorPoint}function isLineInPoly(polygon,linestring){var output=!1,i=0;if(!doBBoxOverlap(bbox_1.default(polygon),bbox_1.default(linestring)))return!1;for(;i<linestring.coordinates.length-1;i++){var midPoint=getMidpoint(linestring.coordinates[i],linestring.coordinates[i+1]);if(boolean_point_in_polygon_1.default({type:"Point",coordinates:midPoint},polygon,{ignoreBoundary:!0})){output=!0;break}}return output}function isPolyInPoly(feature1,feature2){if("Feature"===feature1.type&&null===feature1.geometry)return!1;if("Feature"===feature2.type&&null===feature2.geometry)return!1;if(!doBBoxOverlap(bbox_1.default(feature1),bbox_1.default(feature2)))return!1;for(var _i=0,coords_1=invariant_1.getGeom(feature2).coordinates;_i<coords_1.length;_i++)for(var _a=0,ring_1=coords_1[_i];_a<ring_1.length;_a++){var coord=ring_1[_a];if(!boolean_point_in_polygon_1.default(coord,feature1))return!1}return!0}function doBBoxOverlap(bbox1,bbox2){return!(bbox1[0]>bbox2[0])&&(!(bbox1[2]<bbox2[2])&&(!(bbox1[1]>bbox2[1])&&!(bbox1[3]<bbox2[3])))}function compareCoords(pair1,pair2){return pair1[0]===pair2[0]&&pair1[1]===pair2[1]}function getMidpoint(pair1,pair2){return[(pair1[0]+pair2[0])/2,(pair1[1]+pair2[1])/2]}exports.default=function(feature1,feature2){var geom1=invariant_1.getGeom(feature1),geom2=invariant_1.getGeom(feature2),type1=geom1.type,type2=geom2.type,coords1=geom1.coordinates,coords2=geom2.coordinates;switch(type1){case"Point":switch(type2){case"Point":return compareCoords(coords1,coords2);default:throw new Error("feature2 "+type2+" geometry not supported")}case"MultiPoint":switch(type2){case"Point":return isPointInMultiPoint(geom1,geom2);case"MultiPoint":return isMultiPointInMultiPoint(geom1,geom2);default:throw new Error("feature2 "+type2+" geometry not supported")}case"LineString":switch(type2){case"Point":return boolean_point_on_line_1.default(geom2,geom1,{ignoreEndVertices:!0});case"LineString":return isLineOnLine(geom1,geom2);case"MultiPoint":return isMultiPointOnLine(geom1,geom2);default:throw new Error("feature2 "+type2+" geometry not supported")}case"Polygon":switch(type2){case"Point":return boolean_point_in_polygon_1.default(geom2,geom1,{ignoreBoundary:!0});case"LineString":return isLineInPoly(geom1,geom2);case"Polygon":return isPolyInPoly(geom1,geom2);case"MultiPoint":return isMultiPointInPoly(geom1,geom2);default:throw new Error("feature2 "+type2+" geometry not supported")}default:throw new Error("feature1 "+type1+" geometry not supported")}},exports.isPointInMultiPoint=isPointInMultiPoint,exports.isMultiPointInMultiPoint=isMultiPointInMultiPoint,exports.isMultiPointOnLine=isMultiPointOnLine,exports.isMultiPointInPoly=isMultiPointInPoly,exports.isLineOnLine=isLineOnLine,exports.isLineInPoly=isLineInPoly,exports.isPolyInPoly=isPolyInPoly,exports.doBBoxOverlap=doBBoxOverlap,exports.compareCoords=compareCoords,exports.getMidpoint=getMidpoint},{"@turf/bbox":4,"@turf/boolean-point-in-polygon":9,"@turf/boolean-point-on-line":10,"@turf/invariant":22}],7:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var geojson_equality_1=__importDefault(require("geojson-equality")),clean_coords_1=__importDefault(require("@turf/clean-coords")),invariant_1=require("@turf/invariant");exports.default=function(feature1,feature2){return invariant_1.getGeom(feature1).type===invariant_1.getGeom(feature2).type&&new geojson_equality_1.default({precision:6}).compare(clean_coords_1.default(feature1),clean_coords_1.default(feature2))}},{"@turf/clean-coords":14,"@turf/invariant":22,"geojson-equality":50}],8:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var meta_1=require("@turf/meta"),invariant_1=require("@turf/invariant"),line_overlap_1=__importDefault(require("@turf/line-overlap")),line_intersect_1=__importDefault(require("@turf/line-intersect")),geojson_equality_1=__importDefault(require("geojson-equality"));exports.default=function(feature1,feature2){var geom1=invariant_1.getGeom(feature1),geom2=invariant_1.getGeom(feature2),type1=geom1.type,type2=geom2.type;if("MultiPoint"===type1&&"MultiPoint"!==type2||("LineString"===type1||"MultiLineString"===type1)&&"LineString"!==type2&&"MultiLineString"!==type2||("Polygon"===type1||"MultiPolygon"===type1)&&"Polygon"!==type2&&"MultiPolygon"!==type2)throw new Error("features must be of the same type");if("Point"===type1)throw new Error("Point geometry not supported");if(new geojson_equality_1.default({precision:6}).compare(feature1,feature2))return!1;var overlap=0;switch(type1){case"MultiPoint":for(var i=0;i<geom1.coordinates.length;i++)for(var j=0;j<geom2.coordinates.length;j++){var coord1=geom1.coordinates[i],coord2=geom2.coordinates[j];if(coord1[0]===coord2[0]&&coord1[1]===coord2[1])return!0}return!1;case"LineString":case"MultiLineString":meta_1.segmentEach(feature1,function(segment1){meta_1.segmentEach(feature2,function(segment2){line_overlap_1.default(segment1,segment2).features.length&&overlap++})});break;case"Polygon":case"MultiPolygon":meta_1.segmentEach(feature1,function(segment1){meta_1.segmentEach(feature2,function(segment2){line_intersect_1.default(segment1,segment2).features.length&&overlap++})})}return overlap>0}},{"@turf/invariant":22,"@turf/line-intersect":25,"@turf/line-overlap":26,"@turf/meta":28,"geojson-equality":50}],9:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var invariant_1=require("@turf/invariant");function inRing(pt,ring,ignoreBoundary){var isInside=!1;ring[0][0]===ring[ring.length-1][0]&&ring[0][1]===ring[ring.length-1][1]&&(ring=ring.slice(0,ring.length-1));for(var i=0,j=ring.length-1;i<ring.length;j=i++){var xi=ring[i][0],yi=ring[i][1],xj=ring[j][0],yj=ring[j][1];if(pt[1]*(xi-xj)+yi*(xj-pt[0])+yj*(pt[0]-xi)==0&&(xi-pt[0])*(xj-pt[0])<=0&&(yi-pt[1])*(yj-pt[1])<=0)return!ignoreBoundary;yi>pt[1]!=yj>pt[1]&&pt[0]<(xj-xi)*(pt[1]-yi)/(yj-yi)+xi&&(isInside=!isInside)}return isInside}exports.default=function(point,polygon,options){if(void 0===options&&(options={}),!point)throw new Error("point is required");if(!polygon)throw new Error("polygon is required");var pt=invariant_1.getCoord(point),geom=invariant_1.getGeom(polygon),type=geom.type,bbox=polygon.bbox,polys=geom.coordinates;if(bbox&&!1===function(pt,bbox){return bbox[0]<=pt[0]&&bbox[1]<=pt[1]&&bbox[2]>=pt[0]&&bbox[3]>=pt[1]}(pt,bbox))return!1;"Polygon"===type&&(polys=[polys]);for(var insidePoly=!1,i=0;i<polys.length&&!insidePoly;i++)if(inRing(pt,polys[i][0],options.ignoreBoundary)){for(var inHole=!1,k=1;k<polys[i].length&&!inHole;)inRing(pt,polys[i][k],!options.ignoreBoundary)&&(inHole=!0),k++;inHole||(insidePoly=!0)}return insidePoly}},{"@turf/invariant":22}],10:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var invariant_1=require("@turf/invariant");function isPointOnLineSegment(lineSegmentStart,lineSegmentEnd,pt,excludeBoundary,epsilon){var x=pt[0],y=pt[1],x1=lineSegmentStart[0],y1=lineSegmentStart[1],x2=lineSegmentEnd[0],y2=lineSegmentEnd[1],dxl=x2-x1,dyl=y2-y1,cross=(pt[0]-x1)*dyl-(pt[1]-y1)*dxl;if(null!==epsilon){if(Math.abs(cross)>epsilon)return!1}else if(0!==cross)return!1;return excludeBoundary?"start"===excludeBoundary?Math.abs(dxl)>=Math.abs(dyl)?dxl>0?x1<x&&x<=x2:x2<=x&&x<x1:dyl>0?y1<y&&y<=y2:y2<=y&&y<y1:"end"===excludeBoundary?Math.abs(dxl)>=Math.abs(dyl)?dxl>0?x1<=x&&x<x2:x2<x&&x<=x1:dyl>0?y1<=y&&y<y2:y2<y&&y<=y1:"both"===excludeBoundary&&(Math.abs(dxl)>=Math.abs(dyl)?dxl>0?x1<x&&x<x2:x2<x&&x<x1:dyl>0?y1<y&&y<y2:y2<y&&y<y1):Math.abs(dxl)>=Math.abs(dyl)?dxl>0?x1<=x&&x<=x2:x2<=x&&x<=x1:dyl>0?y1<=y&&y<=y2:y2<=y&&y<=y1}exports.default=function(pt,line,options){void 0===options&&(options={});for(var ptCoords=invariant_1.getCoord(pt),lineCoords=invariant_1.getCoords(line),i=0;i<lineCoords.length-1;i++){var ignoreBoundary=!1;if(options.ignoreEndVertices&&(0===i&&(ignoreBoundary="start"),i===lineCoords.length-2&&(ignoreBoundary="end"),0===i&&i+1===lineCoords.length-1&&(ignoreBoundary="both")),isPointOnLineSegment(lineCoords[i],lineCoords[i+1],ptCoords,ignoreBoundary,void 0===options.epsilon?null:options.epsilon))return!0}return!1}},{"@turf/invariant":22}],11:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var bbox_1=__importDefault(require("@turf/bbox")),helpers_1=require("@turf/helpers");exports.default=function(geojson,options){void 0===options&&(options={});var ext=bbox_1.default(geojson),x=(ext[0]+ext[2])/2,y=(ext[1]+ext[3])/2;return helpers_1.point([x,y],options.properties,options)}},{"@turf/bbox":4,"@turf/helpers":21}],12:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var meta_1=require("@turf/meta"),helpers_1=require("@turf/helpers");exports.default=function(geojson,options){void 0===options&&(options={});var xSum=0,ySum=0,len=0;return meta_1.coordEach(geojson,function(coord){xSum+=coord[0],ySum+=coord[1],len++},!0),helpers_1.point([xSum/len,ySum/len],options.properties)}},{"@turf/helpers":21,"@turf/meta":28}],13:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var destination_1=__importDefault(require("@turf/destination")),helpers_1=require("@turf/helpers");exports.default=function(center,radius,options){void 0===options&&(options={});for(var steps=options.steps||64,properties=options.properties?options.properties:!Array.isArray(center)&&"Feature"===center.type&&center.properties?center.properties:{},coordinates=[],i=0;i<steps;i++)coordinates.push(destination_1.default(center,radius,-360*i/steps,options).geometry.coordinates);return coordinates.push(coordinates[0]),helpers_1.polygon([coordinates],properties)}},{"@turf/destination":17,"@turf/helpers":21}],14:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant");function cleanLine(line){var points=invariant_1.getCoords(line);if(2===points.length&&!equals(points[0],points[1]))return points;var newPoints=[],secondToLast=points.length-1,newPointsLength=newPoints.length;newPoints.push(points[0]);for(var i=1;i<secondToLast;i++){var prevAddedPoint=newPoints[newPoints.length-1];points[i][0]===prevAddedPoint[0]&&points[i][1]===prevAddedPoint[1]||(newPoints.push(points[i]),(newPointsLength=newPoints.length)>2&&isPointOnLineSegment(newPoints[newPointsLength-3],newPoints[newPointsLength-1],newPoints[newPointsLength-2])&&newPoints.splice(newPoints.length-2,1))}if(newPoints.push(points[points.length-1]),newPointsLength=newPoints.length,equals(points[0],points[points.length-1])&&newPointsLength<4)throw new Error("invalid polygon");return isPointOnLineSegment(newPoints[newPointsLength-3],newPoints[newPointsLength-1],newPoints[newPointsLength-2])&&newPoints.splice(newPoints.length-2,1),newPoints}function equals(pt1,pt2){return pt1[0]===pt2[0]&&pt1[1]===pt2[1]}function isPointOnLineSegment(start,end,point){var x=point[0],y=point[1],startX=start[0],startY=start[1],endX=end[0],endY=end[1],dxl=endX-startX,dyl=endY-startY;return 0===(x-startX)*dyl-(y-startY)*dxl&&(Math.abs(dxl)>=Math.abs(dyl)?dxl>0?startX<=x&&x<=endX:endX<=x&&x<=startX:dyl>0?startY<=y&&y<=endY:endY<=y&&y<=startY)}exports.default=function(geojson,options){void 0===options&&(options={});var mutate="object"==typeof options?options.mutate:options;if(!geojson)throw new Error("geojson is required");var type=invariant_1.getType(geojson),newCoords=[];switch(type){case"LineString":newCoords=cleanLine(geojson);break;case"MultiLineString":case"Polygon":invariant_1.getCoords(geojson).forEach(function(line){newCoords.push(cleanLine(line))});break;case"MultiPolygon":invariant_1.getCoords(geojson).forEach(function(polygons){var polyPoints=[];polygons.forEach(function(ring){polyPoints.push(cleanLine(ring))}),newCoords.push(polyPoints)});break;case"Point":return geojson;case"MultiPoint":var existing={};invariant_1.getCoords(geojson).forEach(function(coord){var key=coord.join("-");Object.prototype.hasOwnProperty.call(existing,key)||(newCoords.push(coord),existing[key]=!0)});break;default:throw new Error(type+" geometry not supported")}return geojson.coordinates?!0===mutate?(geojson.coordinates=newCoords,geojson):{type:type,coordinates:newCoords}:!0===mutate?(geojson.geometry.coordinates=newCoords,geojson):helpers_1.feature({type:type,coordinates:newCoords},geojson.properties,{bbox:geojson.bbox,id:geojson.id})}},{"@turf/helpers":21,"@turf/invariant":22}],15:[function(require,module,exports){"use strict";function cloneFeature(geojson){var cloned={type:"Feature"};return Object.keys(geojson).forEach(function(key){switch(key){case"type":case"properties":case"geometry":return;default:cloned[key]=geojson[key]}}),cloned.properties=function cloneProperties(properties){var cloned={};if(!properties)return cloned;Object.keys(properties).forEach(function(key){var value=properties[key];"object"==typeof value?null===value?cloned[key]=null:Array.isArray(value)?cloned[key]=value.map(function(item){return item}):cloned[key]=cloneProperties(value):cloned[key]=value});return cloned}(geojson.properties),cloned.geometry=cloneGeometry(geojson.geometry),cloned}function cloneGeometry(geometry){var geom={type:geometry.type};return geometry.bbox&&(geom.bbox=geometry.bbox),"GeometryCollection"===geometry.type?(geom.geometries=geometry.geometries.map(function(g){return cloneGeometry(g)}),geom):(geom.coordinates=function deepSlice(coords){var cloned=coords;if("object"!=typeof cloned[0])return cloned.slice();return cloned.map(function(coord){return deepSlice(coord)})}(geometry.coordinates),geom)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(geojson){if(!geojson)throw new Error("geojson is required");switch(geojson.type){case"Feature":return cloneFeature(geojson);case"FeatureCollection":return function(geojson){var cloned={type:"FeatureCollection"};return Object.keys(geojson).forEach(function(key){switch(key){case"type":case"features":return;default:cloned[key]=geojson[key]}}),cloned.features=geojson.features.map(function(feature){return cloneFeature(feature)}),cloned}(geojson);case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return cloneGeometry(geojson);default:throw new Error("unknown GeoJSON type")}}},{}],16:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers"),meta_1=require("@turf/meta"),concaveman_1=__importDefault(require("concaveman"));exports.default=function(geojson,options){void 0===options&&(options={}),options.concavity=options.concavity||1/0;var points=[];if(meta_1.coordEach(geojson,function(coord){points.push([coord[0],coord[1]])}),!points.length)return null;var convexHull=concaveman_1.default(points,options.concavity);return convexHull.length>3?helpers_1.polygon([convexHull]):null}},{"@turf/helpers":21,"@turf/meta":28,concaveman:44}],17:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant");exports.default=function(origin,distance,bearing,options){void 0===options&&(options={});var coordinates1=invariant_1.getCoord(origin),longitude1=helpers_1.degreesToRadians(coordinates1[0]),latitude1=helpers_1.degreesToRadians(coordinates1[1]),bearingRad=helpers_1.degreesToRadians(bearing),radians=helpers_1.lengthToRadians(distance,options.units),latitude2=Math.asin(Math.sin(latitude1)*Math.cos(radians)+Math.cos(latitude1)*Math.sin(radians)*Math.cos(bearingRad)),longitude2=longitude1+Math.atan2(Math.sin(bearingRad)*Math.sin(radians)*Math.cos(latitude1),Math.cos(radians)-Math.sin(latitude1)*Math.sin(latitude2)),lng=helpers_1.radiansToDegrees(longitude2),lat=helpers_1.radiansToDegrees(latitude2);return helpers_1.point([lng,lat],options.properties)}},{"@turf/helpers":21,"@turf/invariant":22}],18:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var invariant_1=require("@turf/invariant"),helpers_1=require("@turf/helpers");exports.default=function(from,to,options){void 0===options&&(options={});var coordinates1=invariant_1.getCoord(from),coordinates2=invariant_1.getCoord(to),dLat=helpers_1.degreesToRadians(coordinates2[1]-coordinates1[1]),dLon=helpers_1.degreesToRadians(coordinates2[0]-coordinates1[0]),lat1=helpers_1.degreesToRadians(coordinates1[1]),lat2=helpers_1.degreesToRadians(coordinates2[1]),a=Math.pow(Math.sin(dLat/2),2)+Math.pow(Math.sin(dLon/2),2)*Math.cos(lat1)*Math.cos(lat2);return helpers_1.radiansToLength(2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a)),options.units)}},{"@turf/helpers":21,"@turf/invariant":22}],19:[function(require,module,exports){"use strict";var bbox=require("@turf/bbox"),bboxPolygon=require("@turf/bbox-polygon");function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var bbox__default=_interopDefaultLegacy(bbox),bboxPolygon__default=_interopDefaultLegacy(bboxPolygon);function envelope(geojson){return bboxPolygon__default.default(bbox__default.default(geojson))}module.exports=envelope,module.exports.default=envelope},{"@turf/bbox":4,"@turf/bbox-polygon":3}],20:[function(require,module,exports){"use strict";var meta=require("@turf/meta"),helpers=require("@turf/helpers");function explode(geojson){var points=[];return"FeatureCollection"===geojson.type?meta.featureEach(geojson,function(feature){meta.coordEach(feature,function(coord){points.push(helpers.point(coord,feature.properties))})}):meta.coordEach(geojson,function(coord){points.push(helpers.point(coord,geojson.properties))}),helpers.featureCollection(points)}module.exports=explode,module.exports.default=explode},{"@turf/helpers":21,"@turf/meta":28}],21:[function(require,module,exports){"use strict";function feature(geom,properties,options){void 0===options&&(options={});var feat={type:"Feature"};return(0===options.id||options.id)&&(feat.id=options.id),options.bbox&&(feat.bbox=options.bbox),feat.properties=properties||{},feat.geometry=geom,feat}function point(coordinates,properties,options){if(void 0===options&&(options={}),!coordinates)throw new Error("coordinates is required");if(!Array.isArray(coordinates))throw new Error("coordinates must be an Array");if(coordinates.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!isNumber(coordinates[0])||!isNumber(coordinates[1]))throw new Error("coordinates must contain numbers");return feature({type:"Point",coordinates:coordinates},properties,options)}function polygon(coordinates,properties,options){void 0===options&&(options={});for(var _i=0,coordinates_1=coordinates;_i<coordinates_1.length;_i++){var ring=coordinates_1[_i];if(ring.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var j=0;j<ring[ring.length-1].length;j++)if(ring[ring.length-1][j]!==ring[0][j])throw new Error("First and last Position are not equivalent.")}return feature({type:"Polygon",coordinates:coordinates},properties,options)}function lineString(coordinates,properties,options){if(void 0===options&&(options={}),coordinates.length<2)throw new Error("coordinates must be an array of two or more positions");return feature({type:"LineString",coordinates:coordinates},properties,options)}function featureCollection(features,options){void 0===options&&(options={});var fc={type:"FeatureCollection"};return options.id&&(fc.id=options.id),options.bbox&&(fc.bbox=options.bbox),fc.features=features,fc}function multiLineString(coordinates,properties,options){return void 0===options&&(options={}),feature({type:"MultiLineString",coordinates:coordinates},properties,options)}function multiPoint(coordinates,properties,options){return void 0===options&&(options={}),feature({type:"MultiPoint",coordinates:coordinates},properties,options)}function multiPolygon(coordinates,properties,options){return void 0===options&&(options={}),feature({type:"MultiPolygon",coordinates:coordinates},properties,options)}function radiansToLength(radians,units){void 0===units&&(units="kilometers");var factor=exports.factors[units];if(!factor)throw new Error(units+" units is invalid");return radians*factor}function lengthToRadians(distance,units){void 0===units&&(units="kilometers");var factor=exports.factors[units];if(!factor)throw new Error(units+" units is invalid");return distance/factor}function radiansToDegrees(radians){return 180*(radians%(2*Math.PI))/Math.PI}function isNumber(num){return!isNaN(num)&&null!==num&&!Array.isArray(num)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.earthRadius=6371008.8,exports.factors={centimeters:100*exports.earthRadius,centimetres:100*exports.earthRadius,degrees:exports.earthRadius/111325,feet:3.28084*exports.earthRadius,inches:39.37*exports.earthRadius,kilometers:exports.earthRadius/1e3,kilometres:exports.earthRadius/1e3,meters:exports.earthRadius,metres:exports.earthRadius,miles:exports.earthRadius/1609.344,millimeters:1e3*exports.earthRadius,millimetres:1e3*exports.earthRadius,nauticalmiles:exports.earthRadius/1852,radians:1,yards:1.0936*exports.earthRadius},exports.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/exports.earthRadius,yards:1.0936133},exports.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:3.86e-7,millimeters:1e6,millimetres:1e6,yards:1.195990046},exports.feature=feature,exports.geometry=function(type,coordinates,_options){switch(void 0===_options&&(_options={}),type){case"Point":return point(coordinates).geometry;case"LineString":return lineString(coordinates).geometry;case"Polygon":return polygon(coordinates).geometry;case"MultiPoint":return multiPoint(coordinates).geometry;case"MultiLineString":return multiLineString(coordinates).geometry;case"MultiPolygon":return multiPolygon(coordinates).geometry;default:throw new Error(type+" is invalid")}},exports.point=point,exports.points=function(coordinates,properties,options){return void 0===options&&(options={}),featureCollection(coordinates.map(function(coords){return point(coords,properties)}),options)},exports.polygon=polygon,exports.polygons=function(coordinates,properties,options){return void 0===options&&(options={}),featureCollection(coordinates.map(function(coords){return polygon(coords,properties)}),options)},exports.lineString=lineString,exports.lineStrings=function(coordinates,properties,options){return void 0===options&&(options={}),featureCollection(coordinates.map(function(coords){return lineString(coords,properties)}),options)},exports.featureCollection=featureCollection,exports.multiLineString=multiLineString,exports.multiPoint=multiPoint,exports.multiPolygon=multiPolygon,exports.geometryCollection=function(geometries,properties,options){return void 0===options&&(options={}),feature({type:"GeometryCollection",geometries:geometries},properties,options)},exports.round=function(num,precision){if(void 0===precision&&(precision=0),precision&&!(precision>=0))throw new Error("precision must be a positive number");var multiplier=Math.pow(10,precision||0);return Math.round(num*multiplier)/multiplier},exports.radiansToLength=radiansToLength,exports.lengthToRadians=lengthToRadians,exports.lengthToDegrees=function(distance,units){return radiansToDegrees(lengthToRadians(distance,units))},exports.bearingToAzimuth=function(bearing){var angle=bearing%360;return angle<0&&(angle+=360),angle},exports.radiansToDegrees=radiansToDegrees,exports.degreesToRadians=function(degrees){return degrees%360*Math.PI/180},exports.convertLength=function(length,originalUnit,finalUnit){if(void 0===originalUnit&&(originalUnit="kilometers"),void 0===finalUnit&&(finalUnit="kilometers"),!(length>=0))throw new Error("length must be a positive number");return radiansToLength(lengthToRadians(length,originalUnit),finalUnit)},exports.convertArea=function(area,originalUnit,finalUnit){if(void 0===originalUnit&&(originalUnit="meters"),void 0===finalUnit&&(finalUnit="kilometers"),!(area>=0))throw new Error("area must be a positive number");var startFactor=exports.areaFactors[originalUnit];if(!startFactor)throw new Error("invalid original units");var finalFactor=exports.areaFactors[finalUnit];if(!finalFactor)throw new Error("invalid final units");return area/startFactor*finalFactor},exports.isNumber=isNumber,exports.isObject=function(input){return!!input&&input.constructor===Object},exports.validateBBox=function(bbox){if(!bbox)throw new Error("bbox is required");if(!Array.isArray(bbox))throw new Error("bbox must be an Array");if(4!==bbox.length&&6!==bbox.length)throw new Error("bbox must be an Array of 4 or 6 numbers");bbox.forEach(function(num){if(!isNumber(num))throw new Error("bbox must only contain numbers")})},exports.validateId=function(id){if(!id)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof id))throw new Error("id must be a number or a string")}},{}],22:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers");exports.getCoord=function(coord){if(!coord)throw new Error("coord is required");if(!Array.isArray(coord)){if("Feature"===coord.type&&null!==coord.geometry&&"Point"===coord.geometry.type)return coord.geometry.coordinates;if("Point"===coord.type)return coord.coordinates}if(Array.isArray(coord)&&coord.length>=2&&!Array.isArray(coord[0])&&!Array.isArray(coord[1]))return coord;throw new Error("coord must be GeoJSON Point or an Array of numbers")},exports.getCoords=function(coords){if(Array.isArray(coords))return coords;if("Feature"===coords.type){if(null!==coords.geometry)return coords.geometry.coordinates}else if(coords.coordinates)return coords.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")},exports.containsNumber=function containsNumber(coordinates){if(coordinates.length>1&&helpers_1.isNumber(coordinates[0])&&helpers_1.isNumber(coordinates[1]))return!0;if(Array.isArray(coordinates[0])&&coordinates[0].length)return containsNumber(coordinates[0]);throw new Error("coordinates must only contain numbers")},exports.geojsonType=function(value,type,name){if(!type||!name)throw new Error("type and name required");if(!value||value.type!==type)throw new Error("Invalid input to "+name+": must be a "+type+", given "+value.type)},exports.featureOf=function(feature,type,name){if(!feature)throw new Error("No feature passed");if(!name)throw new Error(".featureOf() requires a name");if(!feature||"Feature"!==feature.type||!feature.geometry)throw new Error("Invalid input to "+name+", Feature with geometry required");if(!feature.geometry||feature.geometry.type!==type)throw new Error("Invalid input to "+name+": must be a "+type+", given "+feature.geometry.type)},exports.collectionOf=function(featureCollection,type,name){if(!featureCollection)throw new Error("No featureCollection passed");if(!name)throw new Error(".collectionOf() requires a name");if(!featureCollection||"FeatureCollection"!==featureCollection.type)throw new Error("Invalid input to "+name+", FeatureCollection required");for(var _i=0,_a=featureCollection.features;_i<_a.length;_i++){var feature=_a[_i];if(!feature||"Feature"!==feature.type||!feature.geometry)throw new Error("Invalid input to "+name+", Feature with geometry required");if(!feature.geometry||feature.geometry.type!==type)throw new Error("Invalid input to "+name+": must be a "+type+", given "+feature.geometry.type)}},exports.getGeom=function(geojson){return"Feature"===geojson.type?geojson.geometry:geojson},exports.getType=function(geojson,_name){return"FeatureCollection"===geojson.type?"FeatureCollection":"GeometryCollection"===geojson.type?"GeometryCollection":"Feature"===geojson.type&&null!==geojson.geometry?geojson.geometry.type:geojson.type}},{"@turf/helpers":21}],23:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var distance_1=__importDefault(require("@turf/distance")),meta_1=require("@turf/meta");exports.default=function(geojson,options){return void 0===options&&(options={}),meta_1.segmentReduce(geojson,function(previousValue,segment){var coords=segment.geometry.coordinates;return previousValue+distance_1.default(coords[0],coords[1],options)},0)}},{"@turf/distance":18,"@turf/meta":28}],24:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var circle_1=__importDefault(require("@turf/circle")),destination_1=__importDefault(require("@turf/destination")),helpers_1=require("@turf/helpers");function convertAngleTo360(alfa){var beta=alfa%360;return beta<0&&(beta+=360),beta}exports.default=function(center,radius,bearing1,bearing2,options){void 0===options&&(options={});var steps=options.steps||64,angle1=convertAngleTo360(bearing1),angle2=convertAngleTo360(bearing2),properties=Array.isArray(center)||"Feature"!==center.type?{}:center.properties;if(angle1===angle2)return helpers_1.lineString(circle_1.default(center,radius,options).geometry.coordinates[0],properties);for(var arcStartDegree=angle1,arcEndDegree=angle1<angle2?angle2:angle2+360,alfa=arcStartDegree,coordinates=[],i=0;alfa<arcEndDegree;)coordinates.push(destination_1.default(center,radius,alfa,options).geometry.coordinates),alfa=arcStartDegree+360*++i/steps;return alfa>arcEndDegree&&coordinates.push(destination_1.default(center,radius,arcEndDegree,options).geometry.coordinates),helpers_1.lineString(coordinates,properties)}},{"@turf/circle":13,"@turf/destination":17,"@turf/helpers":21}],25:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant"),line_segment_1=__importDefault(require("@turf/line-segment")),meta_1=require("@turf/meta"),geojson_rbush_1=__importDefault(require("geojson-rbush"));function intersects(line1,line2){var coords1=invariant_1.getCoords(line1),coords2=invariant_1.getCoords(line2);if(2!==coords1.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==coords2.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var x1=coords1[0][0],y1=coords1[0][1],x2=coords1[1][0],y2=coords1[1][1],x3=coords2[0][0],y3=coords2[0][1],x4=coords2[1][0],y4=coords2[1][1],denom=(y4-y3)*(x2-x1)-(x4-x3)*(y2-y1),numeA=(x4-x3)*(y1-y3)-(y4-y3)*(x1-x3),numeB=(x2-x1)*(y1-y3)-(y2-y1)*(x1-x3);if(0===denom)return null;var uA=numeA/denom,uB=numeB/denom;if(uA>=0&&uA<=1&&uB>=0&&uB<=1){var x=x1+uA*(x2-x1),y=y1+uA*(y2-y1);return helpers_1.point([x,y])}return null}exports.default=function(line1,line2){var unique={},results=[];if("LineString"===line1.type&&(line1=helpers_1.feature(line1)),"LineString"===line2.type&&(line2=helpers_1.feature(line2)),"Feature"===line1.type&&"Feature"===line2.type&&null!==line1.geometry&&null!==line2.geometry&&"LineString"===line1.geometry.type&&"LineString"===line2.geometry.type&&2===line1.geometry.coordinates.length&&2===line2.geometry.coordinates.length){var intersect=intersects(line1,line2);return intersect&&results.push(intersect),helpers_1.featureCollection(results)}var tree=geojson_rbush_1.default();return tree.load(line_segment_1.default(line2)),meta_1.featureEach(line_segment_1.default(line1),function(segment){meta_1.featureEach(tree.search(segment),function(match){var intersect=intersects(segment,match);if(intersect){var key=invariant_1.getCoords(intersect).join(",");unique[key]||(unique[key]=!0,results.push(intersect))}})}),helpers_1.featureCollection(results)}},{"@turf/helpers":21,"@turf/invariant":22,"@turf/line-segment":27,"@turf/meta":28,"geojson-rbush":51}],26:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var geojson_rbush_1=__importDefault(require("geojson-rbush")),line_segment_1=__importDefault(require("@turf/line-segment")),nearest_point_on_line_1=__importDefault(require("@turf/nearest-point-on-line")),boolean_point_on_line_1=__importDefault(require("@turf/boolean-point-on-line")),invariant_1=require("@turf/invariant"),meta_1=require("@turf/meta"),helpers_1=require("@turf/helpers"),deep_equal_1=__importDefault(require("deep-equal"));function concatSegment(line,segment){var coords=invariant_1.getCoords(segment),lineCoords=invariant_1.getCoords(line),start=lineCoords[0],end=lineCoords[lineCoords.length-1],geom=line.geometry.coordinates;return deep_equal_1.default(coords[0],start)?geom.unshift(coords[1]):deep_equal_1.default(coords[0],end)?geom.push(coords[1]):deep_equal_1.default(coords[1],start)?geom.unshift(coords[0]):deep_equal_1.default(coords[1],end)&&geom.push(coords[0]),line}exports.default=function(line1,line2,options){if(void 0===options&&(options={}),options=options||{},!helpers_1.isObject(options))throw new Error("options is invalid");var overlapSegment,tolerance=options.tolerance||0,features=[],tree=geojson_rbush_1.default(),line=line_segment_1.default(line1);return tree.load(line),meta_1.segmentEach(line2,function(segment){var doesOverlaps=!1;segment&&(meta_1.featureEach(tree.search(segment),function(match){if(!1===doesOverlaps){var coordsSegment=invariant_1.getCoords(segment).sort(),coordsMatch=invariant_1.getCoords(match).sort();deep_equal_1.default(coordsSegment,coordsMatch)?(doesOverlaps=!0,overlapSegment=overlapSegment?concatSegment(overlapSegment,segment):segment):(0===tolerance?boolean_point_on_line_1.default(coordsSegment[0],match)&&boolean_point_on_line_1.default(coordsSegment[1],match):nearest_point_on_line_1.default(match,coordsSegment[0]).properties.dist<=tolerance&&nearest_point_on_line_1.default(match,coordsSegment[1]).properties.dist<=tolerance)?(doesOverlaps=!0,overlapSegment=overlapSegment?concatSegment(overlapSegment,segment):segment):(0===tolerance?boolean_point_on_line_1.default(coordsMatch[0],segment)&&boolean_point_on_line_1.default(coordsMatch[1],segment):nearest_point_on_line_1.default(segment,coordsMatch[0]).properties.dist<=tolerance&&nearest_point_on_line_1.default(segment,coordsMatch[1]).properties.dist<=tolerance)&&(overlapSegment=overlapSegment?concatSegment(overlapSegment,match):match)}}),!1===doesOverlaps&&overlapSegment&&(features.push(overlapSegment),overlapSegment=void 0))}),overlapSegment&&features.push(overlapSegment),helpers_1.featureCollection(features)}},{"@turf/boolean-point-on-line":10,"@turf/helpers":21,"@turf/invariant":22,"@turf/line-segment":27,"@turf/meta":28,"@turf/nearest-point-on-line":30,"deep-equal":45,"geojson-rbush":51}],27:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant"),meta_1=require("@turf/meta");exports.default=function(geojson){if(!geojson)throw new Error("geojson is required");var results=[];return meta_1.flattenEach(geojson,function(feature){!function(geojson,results){var coords=[],geometry=geojson.geometry;if(null!==geometry){switch(geometry.type){case"Polygon":coords=invariant_1.getCoords(geometry);break;case"LineString":coords=[invariant_1.getCoords(geometry)]}coords.forEach(function(coord){var segments=function(coords,properties){var segments=[];return coords.reduce(function(previousCoords,currentCoords){var coords1,coords2,x1,y1,x2,y2,segment=helpers_1.lineString([previousCoords,currentCoords],properties);return segment.bbox=(coords2=currentCoords,x1=(coords1=previousCoords)[0],y1=coords1[1],x2=coords2[0],y2=coords2[1],[x1<x2?x1:x2,y1<y2?y1:y2,x1>x2?x1:x2,y1>y2?y1:y2]),segments.push(segment),currentCoords}),segments}(coord,geojson.properties);segments.forEach(function(segment){segment.id=results.length,results.push(segment)})})}}(feature,results)}),helpers_1.featureCollection(results)}},{"@turf/helpers":21,"@turf/invariant":22,"@turf/meta":28}],28:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helpers=require("@turf/helpers");function coordEach(geojson,callback,excludeWrapCoord){if(null!==geojson)for(var j,k,l,geometry,stopG,coords,geometryMaybeCollection,isGeometryCollection,wrapShrink=0,coordIndex=0,type=geojson.type,isFeatureCollection="FeatureCollection"===type,isFeature="Feature"===type,stop=isFeatureCollection?geojson.features.length:1,featureIndex=0;featureIndex<stop;featureIndex++){stopG=(isGeometryCollection=!!(geometryMaybeCollection=isFeatureCollection?geojson.features[featureIndex].geometry:isFeature?geojson.geometry:geojson)&&"GeometryCollection"===geometryMaybeCollection.type)?geometryMaybeCollection.geometries.length:1;for(var geomIndex=0;geomIndex<stopG;geomIndex++){var multiFeatureIndex=0,geometryIndex=0;if(null!==(geometry=isGeometryCollection?geometryMaybeCollection.geometries[geomIndex]:geometryMaybeCollection)){coords=geometry.coordinates;var geomType=geometry.type;switch(wrapShrink=!excludeWrapCoord||"Polygon"!==geomType&&"MultiPolygon"!==geomType?0:1,geomType){case null:break;case"Point":if(!1===callback(coords,coordIndex,featureIndex,multiFeatureIndex,geometryIndex))return!1;coordIndex++,multiFeatureIndex++;break;case"LineString":case"MultiPoint":for(j=0;j<coords.length;j++){if(!1===callback(coords[j],coordIndex,featureIndex,multiFeatureIndex,geometryIndex))return!1;coordIndex++,"MultiPoint"===geomType&&multiFeatureIndex++}"LineString"===geomType&&multiFeatureIndex++;break;case"Polygon":case"MultiLineString":for(j=0;j<coords.length;j++){for(k=0;k<coords[j].length-wrapShrink;k++){if(!1===callback(coords[j][k],coordIndex,featureIndex,multiFeatureIndex,geometryIndex))return!1;coordIndex++}"MultiLineString"===geomType&&multiFeatureIndex++,"Polygon"===geomType&&geometryIndex++}"Polygon"===geomType&&multiFeatureIndex++;break;case"MultiPolygon":for(j=0;j<coords.length;j++){for(geometryIndex=0,k=0;k<coords[j].length;k++){for(l=0;l<coords[j][k].length-wrapShrink;l++){if(!1===callback(coords[j][k][l],coordIndex,featureIndex,multiFeatureIndex,geometryIndex))return!1;coordIndex++}geometryIndex++}multiFeatureIndex++}break;case"GeometryCollection":for(j=0;j<geometry.geometries.length;j++)if(!1===coordEach(geometry.geometries[j],callback,excludeWrapCoord))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function propEach(geojson,callback){var i;switch(geojson.type){case"FeatureCollection":for(i=0;i<geojson.features.length&&!1!==callback(geojson.features[i].properties,i);i++);break;case"Feature":callback(geojson.properties,0)}}function featureEach(geojson,callback){if("Feature"===geojson.type)callback(geojson,0);else if("FeatureCollection"===geojson.type)for(var i=0;i<geojson.features.length&&!1!==callback(geojson.features[i],i);i++);}function geomEach(geojson,callback){var i,j,g,geometry,stopG,geometryMaybeCollection,isGeometryCollection,featureProperties,featureBBox,featureId,featureIndex=0,isFeatureCollection="FeatureCollection"===geojson.type,isFeature="Feature"===geojson.type,stop=isFeatureCollection?geojson.features.length:1;for(i=0;i<stop;i++){for(geometryMaybeCollection=isFeatureCollection?geojson.features[i].geometry:isFeature?geojson.geometry:geojson,featureProperties=isFeatureCollection?geojson.features[i].properties:isFeature?geojson.properties:{},featureBBox=isFeatureCollection?geojson.features[i].bbox:isFeature?geojson.bbox:void 0,featureId=isFeatureCollection?geojson.features[i].id:isFeature?geojson.id:void 0,stopG=(isGeometryCollection=!!geometryMaybeCollection&&"GeometryCollection"===geometryMaybeCollection.type)?geometryMaybeCollection.geometries.length:1,g=0;g<stopG;g++)if(null!==(geometry=isGeometryCollection?geometryMaybeCollection.geometries[g]:geometryMaybeCollection))switch(geometry.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===callback(geometry,featureIndex,featureProperties,featureBBox,featureId))return!1;break;case"GeometryCollection":for(j=0;j<geometry.geometries.length;j++)if(!1===callback(geometry.geometries[j],featureIndex,featureProperties,featureBBox,featureId))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===callback(null,featureIndex,featureProperties,featureBBox,featureId))return!1;featureIndex++}}function flattenEach(geojson,callback){geomEach(geojson,function(geometry,featureIndex,properties,bbox,id){var geomType,type=null===geometry?null:geometry.type;switch(type){case null:case"Point":case"LineString":case"Polygon":return!1!==callback(helpers.feature(geometry,properties,{bbox:bbox,id:id}),featureIndex,0)&&void 0}switch(type){case"MultiPoint":geomType="Point";break;case"MultiLineString":geomType="LineString";break;case"MultiPolygon":geomType="Polygon"}for(var multiFeatureIndex=0;multiFeatureIndex<geometry.coordinates.length;multiFeatureIndex++){var geom={type:geomType,coordinates:geometry.coordinates[multiFeatureIndex]};if(!1===callback(helpers.feature(geom,properties),featureIndex,multiFeatureIndex))return!1}})}function segmentEach(geojson,callback){flattenEach(geojson,function(feature,featureIndex,multiFeatureIndex){var segmentIndex=0;if(feature.geometry){var type=feature.geometry.type;if("Point"!==type&&"MultiPoint"!==type){var previousCoords,previousFeatureIndex=0,previousMultiIndex=0,prevGeomIndex=0;return!1!==coordEach(feature,function(currentCoord,coordIndex,featureIndexCoord,multiPartIndexCoord,geometryIndex){if(void 0===previousCoords||featureIndex>previousFeatureIndex||multiPartIndexCoord>previousMultiIndex||geometryIndex>prevGeomIndex)return previousCoords=currentCoord,previousFeatureIndex=featureIndex,previousMultiIndex=multiPartIndexCoord,prevGeomIndex=geometryIndex,void(segmentIndex=0);var currentSegment=helpers.lineString([previousCoords,currentCoord],feature.properties);if(!1===callback(currentSegment,featureIndex,multiFeatureIndex,geometryIndex,segmentIndex))return!1;segmentIndex++,previousCoords=currentCoord})&&void 0}}})}function lineEach(geojson,callback){if(!geojson)throw new Error("geojson is required");flattenEach(geojson,function(feature,featureIndex,multiFeatureIndex){if(null!==feature.geometry){var type=feature.geometry.type,coords=feature.geometry.coordinates;switch(type){case"LineString":if(!1===callback(feature,featureIndex,multiFeatureIndex,0,0))return!1;break;case"Polygon":for(var geometryIndex=0;geometryIndex<coords.length;geometryIndex++)if(!1===callback(helpers.lineString(coords[geometryIndex],feature.properties),featureIndex,multiFeatureIndex,geometryIndex))return!1}}})}exports.coordAll=function(geojson){var coords=[];return coordEach(geojson,function(coord){coords.push(coord)}),coords},exports.coordEach=coordEach,exports.coordReduce=function(geojson,callback,initialValue,excludeWrapCoord){var previousValue=initialValue;return coordEach(geojson,function(currentCoord,coordIndex,featureIndex,multiFeatureIndex,geometryIndex){previousValue=0===coordIndex&&void 0===initialValue?currentCoord:callback(previousValue,currentCoord,coordIndex,featureIndex,multiFeatureIndex,geometryIndex)},excludeWrapCoord),previousValue},exports.featureEach=featureEach,exports.featureReduce=function(geojson,callback,initialValue){var previousValue=initialValue;return featureEach(geojson,function(currentFeature,featureIndex){previousValue=0===featureIndex&&void 0===initialValue?currentFeature:callback(previousValue,currentFeature,featureIndex)}),previousValue},exports.findPoint=function(geojson,options){if(options=options||{},!helpers.isObject(options))throw new Error("options is invalid");var geometry,featureIndex=options.featureIndex||0,multiFeatureIndex=options.multiFeatureIndex||0,geometryIndex=options.geometryIndex||0,coordIndex=options.coordIndex||0,properties=options.properties;switch(geojson.type){case"FeatureCollection":featureIndex<0&&(featureIndex=geojson.features.length+featureIndex),properties=properties||geojson.features[featureIndex].properties,geometry=geojson.features[featureIndex].geometry;break;case"Feature":properties=properties||geojson.properties,geometry=geojson.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":geometry=geojson;break;default:throw new Error("geojson is invalid")}if(null===geometry)return null;var coords=geometry.coordinates;switch(geometry.type){case"Point":return helpers.point(coords,properties,options);case"MultiPoint":return multiFeatureIndex<0&&(multiFeatureIndex=coords.length+multiFeatureIndex),helpers.point(coords[multiFeatureIndex],properties,options);case"LineString":return coordIndex<0&&(coordIndex=coords.length+coordIndex),helpers.point(coords[coordIndex],properties,options);case"Polygon":return geometryIndex<0&&(geometryIndex=coords.length+geometryIndex),coordIndex<0&&(coordIndex=coords[geometryIndex].length+coordIndex),helpers.point(coords[geometryIndex][coordIndex],properties,options);case"MultiLineString":return multiFeatureIndex<0&&(multiFeatureIndex=coords.length+multiFeatureIndex),coordIndex<0&&(coordIndex=coords[multiFeatureIndex].length+coordIndex),helpers.point(coords[multiFeatureIndex][coordIndex],properties,options);case"MultiPolygon":return multiFeatureIndex<0&&(multiFeatureIndex=coords.length+multiFeatureIndex),geometryIndex<0&&(geometryIndex=coords[multiFeatureIndex].length+geometryIndex),coordIndex<0&&(coordIndex=coords[multiFeatureIndex][geometryIndex].length-coordIndex),helpers.point(coords[multiFeatureIndex][geometryIndex][coordIndex],properties,options)}throw new Error("geojson is invalid")},exports.findSegment=function(geojson,options){if(options=options||{},!helpers.isObject(options))throw new Error("options is invalid");var geometry,featureIndex=options.featureIndex||0,multiFeatureIndex=options.multiFeatureIndex||0,geometryIndex=options.geometryIndex||0,segmentIndex=options.segmentIndex||0,properties=options.properties;switch(geojson.type){case"FeatureCollection":featureIndex<0&&(featureIndex=geojson.features.length+featureIndex),properties=properties||geojson.features[featureIndex].properties,geometry=geojson.features[featureIndex].geometry;break;case"Feature":properties=properties||geojson.properties,geometry=geojson.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":geometry=geojson;break;default:throw new Error("geojson is invalid")}if(null===geometry)return null;var coords=geometry.coordinates;switch(geometry.type){case"Point":case"MultiPoint":return null;case"LineString":return segmentIndex<0&&(segmentIndex=coords.length+segmentIndex-1),helpers.lineString([coords[segmentIndex],coords[segmentIndex+1]],properties,options);case"Polygon":return geometryIndex<0&&(geometryIndex=coords.length+geometryIndex),segmentIndex<0&&(segmentIndex=coords[geometryIndex].length+segmentIndex-1),helpers.lineString([coords[geometryIndex][segmentIndex],coords[geometryIndex][segmentIndex+1]],properties,options);case"MultiLineString":return multiFeatureIndex<0&&(multiFeatureIndex=coords.length+multiFeatureIndex),segmentIndex<0&&(segmentIndex=coords[multiFeatureIndex].length+segmentIndex-1),helpers.lineString([coords[multiFeatureIndex][segmentIndex],coords[multiFeatureIndex][segmentIndex+1]],properties,options);case"MultiPolygon":return multiFeatureIndex<0&&(multiFeatureIndex=coords.length+multiFeatureIndex),geometryIndex<0&&(geometryIndex=coords[multiFeatureIndex].length+geometryIndex),segmentIndex<0&&(segmentIndex=coords[multiFeatureIndex][geometryIndex].length-segmentIndex-1),helpers.lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex],coords[multiFeatureIndex][geometryIndex][segmentIndex+1]],properties,options)}throw new Error("geojson is invalid")},exports.flattenEach=flattenEach,exports.flattenReduce=function(geojson,callback,initialValue){var previousValue=initialValue;return flattenEach(geojson,function(currentFeature,featureIndex,multiFeatureIndex){previousValue=0===featureIndex&&0===multiFeatureIndex&&void 0===initialValue?currentFeature:callback(previousValue,currentFeature,featureIndex,multiFeatureIndex)}),previousValue},exports.geomEach=geomEach,exports.geomReduce=function(geojson,callback,initialValue){var previousValue=initialValue;return geomEach(geojson,function(currentGeometry,featureIndex,featureProperties,featureBBox,featureId){previousValue=0===featureIndex&&void 0===initialValue?currentGeometry:callback(previousValue,currentGeometry,featureIndex,featureProperties,featureBBox,featureId)}),previousValue},exports.lineEach=lineEach,exports.lineReduce=function(geojson,callback,initialValue){var previousValue=initialValue;return lineEach(geojson,function(currentLine,featureIndex,multiFeatureIndex,geometryIndex){previousValue=0===featureIndex&&void 0===initialValue?currentLine:callback(previousValue,currentLine,featureIndex,multiFeatureIndex,geometryIndex)}),previousValue},exports.propEach=propEach,exports.propReduce=function(geojson,callback,initialValue){var previousValue=initialValue;return propEach(geojson,function(currentProperties,featureIndex){previousValue=0===featureIndex&&void 0===initialValue?currentProperties:callback(previousValue,currentProperties,featureIndex)}),previousValue},exports.segmentEach=segmentEach,exports.segmentReduce=function(geojson,callback,initialValue){var previousValue=initialValue,started=!1;return segmentEach(geojson,function(currentSegment,featureIndex,multiFeatureIndex,geometryIndex,segmentIndex){previousValue=!1===started&&void 0===initialValue?currentSegment:callback(previousValue,currentSegment,featureIndex,multiFeatureIndex,geometryIndex,segmentIndex),started=!0}),previousValue}},{"@turf/helpers":21}],29:[function(require,module,exports){"use strict";var bearing=require("@turf/bearing"),destination=require("@turf/destination"),distance=require("@turf/distance");function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var bearing__default=_interopDefaultLegacy(bearing),destination__default=_interopDefaultLegacy(destination),distance__default=_interopDefaultLegacy(distance);function midpoint(point1,point2){var dist=distance__default.default(point1,point2),heading=bearing__default.default(point1,point2);return destination__default.default(point1,dist/2,heading)}module.exports=midpoint,module.exports.default=midpoint},{"@turf/bearing":5,"@turf/destination":17,"@turf/distance":18}],30:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var bearing_1=__importDefault(require("@turf/bearing")),distance_1=__importDefault(require("@turf/distance")),destination_1=__importDefault(require("@turf/destination")),line_intersect_1=__importDefault(require("@turf/line-intersect")),meta_1=require("@turf/meta"),helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant");exports.default=function(lines,pt,options){void 0===options&&(options={});var closestPt=helpers_1.point([1/0,1/0],{dist:1/0}),length=0;return meta_1.flattenEach(lines,function(line){for(var coords=invariant_1.getCoords(line),i=0;i<coords.length-1;i++){var start=helpers_1.point(coords[i]);start.properties.dist=distance_1.default(pt,start,options);var stop_1=helpers_1.point(coords[i+1]);stop_1.properties.dist=distance_1.default(pt,stop_1,options);var sectionLength=distance_1.default(start,stop_1,options),heightDistance=Math.max(start.properties.dist,stop_1.properties.dist),direction=bearing_1.default(start,stop_1),perpendicularPt1=destination_1.default(pt,heightDistance,direction+90,options),perpendicularPt2=destination_1.default(pt,heightDistance,direction-90,options),intersect=line_intersect_1.default(helpers_1.lineString([perpendicularPt1.geometry.coordinates,perpendicularPt2.geometry.coordinates]),helpers_1.lineString([start.geometry.coordinates,stop_1.geometry.coordinates])),intersectPt=null;intersect.features.length>0&&((intersectPt=intersect.features[0]).properties.dist=distance_1.default(pt,intersectPt,options),intersectPt.properties.location=length+distance_1.default(start,intersectPt,options)),start.properties.dist<closestPt.properties.dist&&((closestPt=start).properties.index=i,closestPt.properties.location=length),stop_1.properties.dist<closestPt.properties.dist&&((closestPt=stop_1).properties.index=i+1,closestPt.properties.location=length+sectionLength),intersectPt&&intersectPt.properties.dist<closestPt.properties.dist&&((closestPt=intersectPt).properties.index=i),length+=sectionLength}}),closestPt}},{"@turf/bearing":5,"@turf/destination":17,"@turf/distance":18,"@turf/helpers":21,"@turf/invariant":22,"@turf/line-intersect":25,"@turf/meta":28}],31:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var clone_1=__importDefault(require("@turf/clone")),distance_1=__importDefault(require("@turf/distance")),meta_1=require("@turf/meta");exports.default=function(targetPoint,points){if(!targetPoint)throw new Error("targetPoint is required");if(!points)throw new Error("points is required");var nearest,minDist=1/0,bestFeatureIndex=0;return meta_1.featureEach(points,function(pt,featureIndex){var distanceToPoint=distance_1.default(targetPoint,pt);distanceToPoint<minDist&&(bestFeatureIndex=featureIndex,minDist=distanceToPoint)}),(nearest=clone_1.default(points.features[bestFeatureIndex])).properties.featureIndex=bestFeatureIndex,nearest.properties.distanceToPoint=minDist,nearest}},{"@turf/clone":15,"@turf/distance":18,"@turf/meta":28}],32:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var distance_1=__importDefault(require("@turf/distance")),helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant"),meta_1=require("@turf/meta"),rhumb_distance_1=__importDefault(require("@turf/rhumb-distance"));function dot(u,v){return u[0]*v[0]+u[1]*v[1]}function calcDistance(a,b,options){return"planar"===options.method?rhumb_distance_1.default(a,b,options):distance_1.default(a,b,options)}exports.default=function(pt,line,options){if(void 0===options&&(options={}),options.method||(options.method="geodesic"),options.units||(options.units="kilometers"),!pt)throw new Error("pt is required");if(Array.isArray(pt)?pt=helpers_1.point(pt):"Point"===pt.type?pt=helpers_1.feature(pt):invariant_1.featureOf(pt,"Point","point"),!line)throw new Error("line is required");Array.isArray(line)?line=helpers_1.lineString(line):"LineString"===line.type?line=helpers_1.feature(line):invariant_1.featureOf(line,"LineString","line");var distance=1/0,p=pt.geometry.coordinates;return meta_1.segmentEach(line,function(segment){var a=segment.geometry.coordinates[0],b=segment.geometry.coordinates[1],d=function(p,a,b,options){var v=[b[0]-a[0],b[1]-a[1]],c1=dot([p[0]-a[0],p[1]-a[1]],v);if(c1<=0)return calcDistance(p,a,{method:options.method,units:"degrees"});var c2=dot(v,v);if(c2<=c1)return calcDistance(p,b,{method:options.method,units:"degrees"});var b2=c1/c2,Pb=[a[0]+b2*v[0],a[1]+b2*v[1]];return calcDistance(p,Pb,{method:options.method,units:"degrees"})}(p,a,b,options);d<distance&&(distance=d)}),helpers_1.convertLength(distance,"degrees",options.units)}},{"@turf/distance":18,"@turf/helpers":21,"@turf/invariant":22,"@turf/meta":28,"@turf/rhumb-distance":36}],33:[function(require,module,exports){"use strict";var invariant=require("@turf/invariant"),helpers=require("@turf/helpers"),calcBbox=require("@turf/bbox"),explode=require("@turf/explode"),nearestPoint=require("@turf/nearest-point");function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var calcBbox__default=_interopDefaultLegacy(calcBbox),explode__default=_interopDefaultLegacy(explode),nearestPoint__default=_interopDefaultLegacy(nearestPoint);function polygonTangents(pt,polygon){var rtan,ltan,eprev,pointCoords=invariant.getCoords(pt),polyCoords=invariant.getCoords(polygon),bbox=calcBbox__default.default(polygon),nearestPtIndex=0,nearest=null;switch(pointCoords[0]>bbox[0]&&pointCoords[0]<bbox[2]&&pointCoords[1]>bbox[1]&&pointCoords[1]<bbox[3]&&(nearestPtIndex=(nearest=nearestPoint__default.default(pt,explode__default.default(polygon))).properties.featureIndex),invariant.getType(polygon)){case"Polygon":rtan=polyCoords[0][nearestPtIndex],ltan=polyCoords[0][0],null!==nearest&&nearest.geometry.coordinates[1]<pointCoords[1]&&(ltan=polyCoords[0][nearestPtIndex]),eprev=isLeft(polyCoords[0][0],polyCoords[0][polyCoords[0].length-1],pointCoords);var out=processPolygon(polyCoords[0],pointCoords,eprev,void 0,rtan,ltan);rtan=out[0],ltan=out[1];break;case"MultiPolygon":for(var closestFeature=0,closestVertex=0,verticesCounted=0,i=0;i<polyCoords[0].length;i++){closestFeature=i;for(var verticeFound=!1,i2=0;i2<polyCoords[0][i].length;i2++){if(closestVertex=i2,verticesCounted===nearestPtIndex){verticeFound=!0;break}verticesCounted++}if(verticeFound)break}rtan=polyCoords[0][closestFeature][closestVertex],ltan=polyCoords[0][closestFeature][closestVertex],eprev=isLeft(polyCoords[0][0][0],polyCoords[0][0][polyCoords[0][0].length-1],pointCoords),polyCoords.forEach(function(ring){var out=processPolygon(ring[0],pointCoords,eprev,void 0,rtan,ltan);rtan=out[0],ltan=out[1]})}return helpers.featureCollection([helpers.point(rtan),helpers.point(ltan)])}function processPolygon(polygonCoords,ptCoords,eprev,enext,rtan,ltan){for(var i=0;i<polygonCoords.length;i++){var currentCoords=polygonCoords[i],nextCoordPair=polygonCoords[i+1];i===polygonCoords.length-1&&(nextCoordPair=polygonCoords[0]),enext=isLeft(currentCoords,nextCoordPair,ptCoords),eprev<=0&&enext>0?isLeft(ptCoords,currentCoords,rtan)<0||(rtan=currentCoords):eprev>0&&enext<=0&&(isAbove(ptCoords,currentCoords,ltan)||(ltan=currentCoords)),eprev=enext}return[rtan,ltan]}function isAbove(point1,point2,point3){return isLeft(point1,point2,point3)>0}function isLeft(point1,point2,point3){return(point2[0]-point1[0])*(point3[1]-point1[1])-(point3[0]-point1[0])*(point2[1]-point1[1])}module.exports=polygonTangents,module.exports.default=polygonTangents},{"@turf/bbox":4,"@turf/explode":20,"@turf/helpers":21,"@turf/invariant":22,"@turf/nearest-point":31}],34:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant");function calculateRhumbBearing(from,to){var phi1=helpers_1.degreesToRadians(from[1]),phi2=helpers_1.degreesToRadians(to[1]),deltaLambda=helpers_1.degreesToRadians(to[0]-from[0]);deltaLambda>Math.PI&&(deltaLambda-=2*Math.PI),deltaLambda<-Math.PI&&(deltaLambda+=2*Math.PI);var deltaPsi=Math.log(Math.tan(phi2/2+Math.PI/4)/Math.tan(phi1/2+Math.PI/4)),theta=Math.atan2(deltaLambda,deltaPsi);return(helpers_1.radiansToDegrees(theta)+360)%360}exports.default=function(start,end,options){var bear360;return void 0===options&&(options={}),(bear360=options.final?calculateRhumbBearing(invariant_1.getCoord(end),invariant_1.getCoord(start)):calculateRhumbBearing(invariant_1.getCoord(start),invariant_1.getCoord(end)))>180?-(360-bear360):bear360}},{"@turf/helpers":21,"@turf/invariant":22}],35:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant");exports.default=function(origin,distance,bearing,options){void 0===options&&(options={});var wasNegativeDistance=distance<0,distanceInMeters=helpers_1.convertLength(Math.abs(distance),options.units,"meters");wasNegativeDistance&&(distanceInMeters=-Math.abs(distanceInMeters));var coords=invariant_1.getCoord(origin),destination=function(origin,distance,bearing,radius){radius=void 0===radius?helpers_1.earthRadius:Number(radius);var delta=distance/radius,lambda1=origin[0]*Math.PI/180,phi1=helpers_1.degreesToRadians(origin[1]),theta=helpers_1.degreesToRadians(bearing),DeltaPhi=delta*Math.cos(theta),phi2=phi1+DeltaPhi;Math.abs(phi2)>Math.PI/2&&(phi2=phi2>0?Math.PI-phi2:-Math.PI-phi2);var DeltaPsi=Math.log(Math.tan(phi2/2+Math.PI/4)/Math.tan(phi1/2+Math.PI/4)),q=Math.abs(DeltaPsi)>1e-11?DeltaPhi/DeltaPsi:Math.cos(phi1),DeltaLambda=delta*Math.sin(theta)/q;return[(180*(lambda1+DeltaLambda)/Math.PI+540)%360-180,180*phi2/Math.PI]}(coords,distanceInMeters,bearing);return destination[0]+=destination[0]-coords[0]>180?-360:coords[0]-destination[0]>180?360:0,helpers_1.point(destination,options.properties)}},{"@turf/helpers":21,"@turf/invariant":22}],36:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant");exports.default=function(from,to,options){void 0===options&&(options={});var origin=invariant_1.getCoord(from),destination=invariant_1.getCoord(to);destination[0]+=destination[0]-origin[0]>180?-360:origin[0]-destination[0]>180?360:0;var distanceInMeters=function(origin,destination,radius){var R=radius=void 0===radius?helpers_1.earthRadius:Number(radius),phi1=origin[1]*Math.PI/180,phi2=destination[1]*Math.PI/180,DeltaPhi=phi2-phi1,DeltaLambda=Math.abs(destination[0]-origin[0])*Math.PI/180;DeltaLambda>Math.PI&&(DeltaLambda-=2*Math.PI);var DeltaPsi=Math.log(Math.tan(phi2/2+Math.PI/4)/Math.tan(phi1/2+Math.PI/4)),q=Math.abs(DeltaPsi)>1e-11?DeltaPhi/DeltaPsi:Math.cos(phi1);return Math.sqrt(DeltaPhi*DeltaPhi+q*q*DeltaLambda*DeltaLambda)*R}(origin,destination);return helpers_1.convertLength(distanceInMeters,"meters",options.units)}},{"@turf/helpers":21,"@turf/invariant":22}],37:[function(require,module,exports){"use strict";var circle=require("@turf/circle"),lineArc=require("@turf/line-arc"),meta=require("@turf/meta"),helpers=require("@turf/helpers"),invariant=require("@turf/invariant");function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var circle__default=_interopDefaultLegacy(circle),lineArc__default=_interopDefaultLegacy(lineArc);function sector(center,radius,bearing1,bearing2,options){if(options=options||{},!helpers.isObject(options))throw new Error("options is invalid");var properties=options.properties;if(!center)throw new Error("center is required");if(void 0===bearing1||null===bearing1)throw new Error("bearing1 is required");if(void 0===bearing2||null===bearing2)throw new Error("bearing2 is required");if(!radius)throw new Error("radius is required");if("object"!=typeof options)throw new Error("options must be an object");if(convertAngleTo360(bearing1)===convertAngleTo360(bearing2))return circle__default.default(center,radius,options);var coords=invariant.getCoords(center),arc=lineArc__default.default(center,radius,bearing1,bearing2,options),sliceCoords=[[coords]];return meta.coordEach(arc,function(currentCoords){sliceCoords[0].push(currentCoords)}),sliceCoords[0].push(coords),helpers.polygon(sliceCoords,properties)}function convertAngleTo360(alfa){var beta=alfa%360;return beta<0&&(beta+=360),beta}module.exports=sector,module.exports.default=sector},{"@turf/circle":13,"@turf/helpers":21,"@turf/invariant":22,"@turf/line-arc":24,"@turf/meta":28}],38:[function(require,module,exports){"use strict";var cleanCoords=require("@turf/clean-coords"),clone=require("@turf/clone"),meta=require("@turf/meta"),helpers=require("@turf/helpers");function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var cleanCoords__default=_interopDefaultLegacy(cleanCoords),clone__default=_interopDefaultLegacy(clone);function getSqSegDist(p,p1,p2){var x=p1.x,y=p1.y,dx=p2.x-x,dy=p2.y-y;if(0!==dx||0!==dy){var t=((p.x-x)*dx+(p.y-y)*dy)/(dx*dx+dy*dy);t>1?(x=p2.x,y=p2.y):t>0&&(x+=dx*t,y+=dy*t)}return(dx=p.x-x)*dx+(dy=p.y-y)*dy}function simplifyDouglasPeucker(points,sqTolerance){var last=points.length-1,simplified=[points[0]];return function simplifyDPStep(points,first,last,sqTolerance,simplified){for(var index,maxSqDist=sqTolerance,i=first+1;i<last;i++){var sqDist=getSqSegDist(points[i],points[first],points[last]);sqDist>maxSqDist&&(index=i,maxSqDist=sqDist)}maxSqDist>sqTolerance&&(index-first>1&&simplifyDPStep(points,first,index,sqTolerance,simplified),simplified.push(points[index]),last-index>1&&simplifyDPStep(points,index,last,sqTolerance,simplified))}(points,0,last,sqTolerance,simplified),simplified.push(points[last]),simplified}function simplify(points,tolerance,highestQuality){if(points.length<=2)return points;var sqTolerance=void 0!==tolerance?tolerance*tolerance:1;return points=simplifyDouglasPeucker(points=highestQuality?points:function(points,sqTolerance){for(var point,p1,p2,dx,dy,prevPoint=points[0],newPoints=[prevPoint],i=1,len=points.length;i<len;i++)point=points[i],p2=prevPoint,dx=(p1=point).x-p2.x,dy=p1.y-p2.y,dx*dx+dy*dy>sqTolerance&&(newPoints.push(point),prevPoint=point);return prevPoint!==point&&newPoints.push(point),newPoints}(points,sqTolerance),sqTolerance)}function simplify$1(geojson,options){if(options=options||{},!helpers.isObject(options))throw new Error("options is invalid");var tolerance=void 0!==options.tolerance?options.tolerance:1,highQuality=options.highQuality||!1,mutate=options.mutate||!1;if(!geojson)throw new Error("geojson is required");if(tolerance&&tolerance<0)throw new Error("invalid tolerance");return!0!==mutate&&(geojson=clone__default.default(geojson)),meta.geomEach(geojson,function(geom){!function(geometry,tolerance,highQuality){var type=geometry.type;if("Point"===type||"MultiPoint"===type)return geometry;cleanCoords__default.default(geometry,!0);var coordinates=geometry.coordinates;switch(type){case"LineString":geometry.coordinates=simplifyLine(coordinates,tolerance,highQuality);break;case"MultiLineString":geometry.coordinates=coordinates.map(function(lines){return simplifyLine(lines,tolerance,highQuality)});break;case"Polygon":geometry.coordinates=simplifyPolygon(coordinates,tolerance,highQuality);break;case"MultiPolygon":geometry.coordinates=coordinates.map(function(rings){return simplifyPolygon(rings,tolerance,highQuality)})}}(geom,tolerance,highQuality)}),geojson}function simplifyLine(coordinates,tolerance,highQuality){return simplify(coordinates.map(function(coord){return{x:coord[0],y:coord[1],z:coord[2]}}),tolerance,highQuality).map(function(coords){return coords.z?[coords.x,coords.y,coords.z]:[coords.x,coords.y]})}function simplifyPolygon(coordinates,tolerance,highQuality){return coordinates.map(function(ring){var pts=ring.map(function(coord){return{x:coord[0],y:coord[1]}});if(pts.length<4)throw new Error("invalid polygon");for(var simpleRing=simplify(pts,tolerance,highQuality).map(function(coords){return[coords.x,coords.y]});!checkValidity(simpleRing);)simpleRing=simplify(pts,tolerance-=.01*tolerance,highQuality).map(function(coords){return[coords.x,coords.y]});return simpleRing[simpleRing.length-1][0]===simpleRing[0][0]&&simpleRing[simpleRing.length-1][1]===simpleRing[0][1]||simpleRing.push(simpleRing[0]),simpleRing})}function checkValidity(ring){return!(ring.length<3)&&!(3===ring.length&&ring[2][0]===ring[0][0]&&ring[2][1]===ring[0][1])}module.exports=simplify$1,module.exports.default=simplify$1},{"@turf/clean-coords":14,"@turf/clone":15,"@turf/helpers":21,"@turf/meta":28}],39:[function(require,module,exports){"use strict";var earcut=require("earcut"),helpers=require("@turf/helpers");var earcut__default=function(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}(earcut);function tesselate(poly){if(!poly.geometry||"Polygon"!==poly.geometry.type&&"MultiPolygon"!==poly.geometry.type)throw new Error("input must be a Polygon or MultiPolygon");var fc={type:"FeatureCollection",features:[]};return"Polygon"===poly.geometry.type?fc.features=processPolygon(poly.geometry.coordinates):poly.geometry.coordinates.forEach(function(coordinates){fc.features=fc.features.concat(processPolygon(coordinates))}),fc}function processPolygon(coordinates){var data=function(data){for(var dim=data[0][0].length,result={vertices:[],holes:[],dimensions:dim},holeIndex=0,i=0;i<data.length;i++){for(var j=0;j<data[i].length;j++)for(var d=0;d<dim;d++)result.vertices.push(data[i][j][d]);i>0&&(holeIndex+=data[i-1].length,result.holes.push(holeIndex))}return result}(coordinates),result=earcut__default.default(data.vertices,data.holes,2),features=[],vertices=[];result.forEach(function(vert,i){var index=result[i];vertices.push([data.vertices[2*index],data.vertices[2*index+1]])});for(var i=0;i<vertices.length;i+=3){var coords=vertices.slice(i,i+3);coords.push(vertices[i]),features.push(helpers.polygon([coords]))}return features}module.exports=tesselate,module.exports.default=tesselate},{"@turf/helpers":21,earcut:47}],40:[function(require,module,exports){"use strict";var clone=require("@turf/clone"),center=require("@turf/center"),centroid=require("@turf/centroid"),turfBBox=require("@turf/bbox"),rhumbBearing=require("@turf/rhumb-bearing"),rhumbDistance=require("@turf/rhumb-distance"),rhumbDestination=require("@turf/rhumb-destination"),meta=require("@turf/meta"),helpers=require("@turf/helpers"),invariant=require("@turf/invariant");function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var clone__default=_interopDefaultLegacy(clone),center__default=_interopDefaultLegacy(center),centroid__default=_interopDefaultLegacy(centroid),turfBBox__default=_interopDefaultLegacy(turfBBox),rhumbBearing__default=_interopDefaultLegacy(rhumbBearing),rhumbDistance__default=_interopDefaultLegacy(rhumbDistance),rhumbDestination__default=_interopDefaultLegacy(rhumbDestination);function transformScale(geojson,factor,options){if(options=options||{},!helpers.isObject(options))throw new Error("options is invalid");var origin=options.origin,mutate=options.mutate;if(!geojson)throw new Error("geojson required");if("number"!=typeof factor||0===factor)throw new Error("invalid factor");var originIsPoint=Array.isArray(origin)||"object"==typeof origin;return!0!==mutate&&(geojson=clone__default.default(geojson)),"FeatureCollection"!==geojson.type||originIsPoint?scale(geojson,factor,origin):(meta.featureEach(geojson,function(feature,index){geojson.features[index]=scale(feature,factor,origin)}),geojson)}function scale(feature,factor,origin){var isPoint="Point"===invariant.getType(feature);return origin=function(geojson,origin){void 0!==origin&&null!==origin||(origin="centroid");if(Array.isArray(origin)||"object"==typeof origin)return invariant.getCoord(origin);var bbox=geojson.bbox?geojson.bbox:turfBBox__default.default(geojson),west=bbox[0],south=bbox[1],east=bbox[2],north=bbox[3];switch(origin){case"sw":case"southwest":case"westsouth":case"bottomleft":return helpers.point([west,south]);case"se":case"southeast":case"eastsouth":case"bottomright":return helpers.point([east,south]);case"nw":case"northwest":case"westnorth":case"topleft":return helpers.point([west,north]);case"ne":case"northeast":case"eastnorth":case"topright":return helpers.point([east,north]);case"center":return center__default.default(geojson);case void 0:case null:case"centroid":return centroid__default.default(geojson);default:throw new Error("invalid origin")}}(feature,origin),1===factor||isPoint?feature:(meta.coordEach(feature,function(coord){var originalDistance=rhumbDistance__default.default(origin,coord),bearing=rhumbBearing__default.default(origin,coord),newDistance=originalDistance*factor,newCoord=invariant.getCoords(rhumbDestination__default.default(origin,newDistance,bearing));coord[0]=newCoord[0],coord[1]=newCoord[1],3===coord.length&&(coord[2]*=factor)}),feature)}module.exports=transformScale,module.exports.default=transformScale},{"@turf/bbox":4,"@turf/center":11,"@turf/centroid":12,"@turf/clone":15,"@turf/helpers":21,"@turf/invariant":22,"@turf/meta":28,"@turf/rhumb-bearing":34,"@turf/rhumb-destination":35,"@turf/rhumb-distance":36}],41:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var polygon_clipping_1=__importDefault(require("polygon-clipping")),invariant_1=require("@turf/invariant"),helpers_1=require("@turf/helpers");exports.default=function(poly1,poly2,options){void 0===options&&(options={});var geom1=invariant_1.getGeom(poly1),geom2=invariant_1.getGeom(poly2),unioned=polygon_clipping_1.default.union(geom1.coordinates,geom2.coordinates);return 0===unioned.length?null:1===unioned.length?helpers_1.polygon(unioned[0],options.properties):helpers_1.multiPolygon(unioned,options.properties)}},{"@turf/helpers":21,"@turf/invariant":22,"polygon-clipping":70}],42:[function(require,module,exports){"use strict";var GetIntrinsic=require("get-intrinsic"),callBind=require("./"),$indexOf=callBind(GetIntrinsic("String.prototype.indexOf"));module.exports=function(name,allowMissing){var intrinsic=GetIntrinsic(name,!!allowMissing);return"function"==typeof intrinsic&&$indexOf(name,".prototype.")>-1?callBind(intrinsic):intrinsic}},{"./":43,"get-intrinsic":52}],43:[function(require,module,exports){"use strict";var bind=require("function-bind"),GetIntrinsic=require("get-intrinsic"),$apply=GetIntrinsic("%Function.prototype.apply%"),$call=GetIntrinsic("%Function.prototype.call%"),$reflectApply=GetIntrinsic("%Reflect.apply%",!0)||bind.call($call,$apply),$gOPD=GetIntrinsic("%Object.getOwnPropertyDescriptor%",!0),$defineProperty=GetIntrinsic("%Object.defineProperty%",!0),$max=GetIntrinsic("%Math.max%");if($defineProperty)try{$defineProperty({},"a",{value:1})}catch(e){$defineProperty=null}module.exports=function(originalFunction){var func=$reflectApply(bind,$call,arguments);$gOPD&&$defineProperty&&($gOPD(func,"length").configurable&&$defineProperty(func,"length",{value:1+$max(0,originalFunction.length-(arguments.length-1))}));return func};var applyBind=function(){return $reflectApply(bind,$apply,arguments)};$defineProperty?$defineProperty(module.exports,"apply",{value:applyBind}):module.exports.apply=applyBind},{"function-bind":49,"get-intrinsic":52}],44:[function(require,module,exports){"use strict";var RBush=require("rbush"),Queue=require("tinyqueue"),pointInPolygon=require("point-in-polygon"),orient=require("robust-predicates/umd/orient2d.min.js").orient2d;function concaveman(points,concavity,lengthThreshold){concavity=Math.max(0,void 0===concavity?2:concavity),lengthThreshold=lengthThreshold||0;var hull=function(points){for(var left=points[0],top=points[0],right=points[0],bottom=points[0],i=0;i<points.length;i++){var p=points[i];p[0]<left[0]&&(left=p),p[0]>right[0]&&(right=p),p[1]<top[1]&&(top=p),p[1]>bottom[1]&&(bottom=p)}var cull=[left,top,right,bottom],filtered=cull.slice();for(i=0;i<points.length;i++)pointInPolygon(points[i],cull)||filtered.push(points[i]);return function(points){points.sort(compareByX);for(var lower=[],i=0;i<points.length;i++){for(;lower.length>=2&&cross(lower[lower.length-2],lower[lower.length-1],points[i])<=0;)lower.pop();lower.push(points[i])}for(var upper=[],ii=points.length-1;ii>=0;ii--){for(;upper.length>=2&&cross(upper[upper.length-2],upper[upper.length-1],points[ii])<=0;)upper.pop();upper.push(points[ii])}return upper.pop(),lower.pop(),lower.concat(upper)}(filtered)}(points),tree=new RBush(16);tree.toBBox=function(a){return{minX:a[0],minY:a[1],maxX:a[0],maxY:a[1]}},tree.compareMinX=function(a,b){return a[0]-b[0]},tree.compareMinY=function(a,b){return a[1]-b[1]},tree.load(points);for(var last,queue=[],i=0;i<hull.length;i++){var p=hull[i];tree.remove(p),last=insertNode(p,last),queue.push(last)}var segTree=new RBush(16);for(i=0;i<queue.length;i++)segTree.insert(updateBBox(queue[i]));for(var sqConcavity=concavity*concavity,sqLenThreshold=lengthThreshold*lengthThreshold;queue.length;){var node=queue.shift(),a=node.p,b=node.next.p,sqLen=getSqDist(a,b);if(!(sqLen<sqLenThreshold)){var maxSqLen=sqLen/sqConcavity;(p=findCandidate(tree,node.prev.p,a,b,node.next.next.p,maxSqLen,segTree))&&Math.min(getSqDist(p,a),getSqDist(p,b))<=maxSqLen&&(queue.push(node),queue.push(insertNode(p,node)),tree.remove(p),segTree.remove(node),segTree.insert(updateBBox(node)),segTree.insert(updateBBox(node.next)))}}node=last;var concave=[];do{concave.push(node.p),node=node.next}while(node!==last);return concave.push(node.p),concave}function findCandidate(tree,a,b,c,d,maxDist,segTree){for(var queue=new Queue([],compareDist),node=tree.data;node;){for(var i=0;i<node.children.length;i++){var child=node.children[i],dist=node.leaf?sqSegDist(child,b,c):sqSegBoxDist(b,c,child);dist>maxDist||queue.push({node:child,dist:dist})}for(;queue.length&&!queue.peek().node.children;){var item=queue.pop(),p=item.node,d0=sqSegDist(p,a,b),d1=sqSegDist(p,c,d);if(item.dist<d0&&item.dist<d1&&noIntersections(b,p,segTree)&&noIntersections(c,p,segTree))return p}(node=queue.pop())&&(node=node.node)}return null}function compareDist(a,b){return a.dist-b.dist}function sqSegBoxDist(a,b,bbox){if(inside(a,bbox)||inside(b,bbox))return 0;var d1=sqSegSegDist(a[0],a[1],b[0],b[1],bbox.minX,bbox.minY,bbox.maxX,bbox.minY);if(0===d1)return 0;var d2=sqSegSegDist(a[0],a[1],b[0],b[1],bbox.minX,bbox.minY,bbox.minX,bbox.maxY);if(0===d2)return 0;var d3=sqSegSegDist(a[0],a[1],b[0],b[1],bbox.maxX,bbox.minY,bbox.maxX,bbox.maxY);if(0===d3)return 0;var d4=sqSegSegDist(a[0],a[1],b[0],b[1],bbox.minX,bbox.maxY,bbox.maxX,bbox.maxY);return 0===d4?0:Math.min(d1,d2,d3,d4)}function inside(a,bbox){return a[0]>=bbox.minX&&a[0]<=bbox.maxX&&a[1]>=bbox.minY&&a[1]<=bbox.maxY}function noIntersections(a,b,segTree){for(var p1,q1,p2,q2,minX=Math.min(a[0],b[0]),minY=Math.min(a[1],b[1]),maxX=Math.max(a[0],b[0]),maxY=Math.max(a[1],b[1]),edges=segTree.search({minX:minX,minY:minY,maxX:maxX,maxY:maxY}),i=0;i<edges.length;i++)if(p1=edges[i].p,q1=edges[i].next.p,p2=a,p1!==(q2=b)&&q1!==p2&&cross(p1,q1,p2)>0!=cross(p1,q1,q2)>0&&cross(p2,q2,p1)>0!=cross(p2,q2,q1)>0)return!1;return!0}function cross(p1,p2,p3){return orient(p1[0],p1[1],p2[0],p2[1],p3[0],p3[1])}function updateBBox(node){var p1=node.p,p2=node.next.p;return node.minX=Math.min(p1[0],p2[0]),node.minY=Math.min(p1[1],p2[1]),node.maxX=Math.max(p1[0],p2[0]),node.maxY=Math.max(p1[1],p2[1]),node}function insertNode(p,prev){var node={p:p,prev:null,next:null,minX:0,minY:0,maxX:0,maxY:0};return prev?(node.next=prev.next,node.prev=prev,prev.next.prev=node,prev.next=node):(node.prev=node,node.next=node),node}function getSqDist(p1,p2){var dx=p1[0]-p2[0],dy=p1[1]-p2[1];return dx*dx+dy*dy}function sqSegDist(p,p1,p2){var x=p1[0],y=p1[1],dx=p2[0]-x,dy=p2[1]-y;if(0!==dx||0!==dy){var t=((p[0]-x)*dx+(p[1]-y)*dy)/(dx*dx+dy*dy);t>1?(x=p2[0],y=p2[1]):t>0&&(x+=dx*t,y+=dy*t)}return(dx=p[0]-x)*dx+(dy=p[1]-y)*dy}function sqSegSegDist(x0,y0,x1,y1,x2,y2,x3,y3){var sc,sN,tc,tN,ux=x1-x0,uy=y1-y0,vx=x3-x2,vy=y3-y2,wx=x0-x2,wy=y0-y2,a=ux*ux+uy*uy,b=ux*vx+uy*vy,c=vx*vx+vy*vy,d=ux*wx+uy*wy,e=vx*wx+vy*wy,D=a*c-b*b,sD=D,tD=D;0===D?(sN=0,sD=1,tN=e,tD=c):(tN=a*e-b*d,(sN=b*e-c*d)<0?(sN=0,tN=e,tD=c):sN>sD&&(sN=sD,tN=e+b,tD=c)),tN<0?(tN=0,-d<0?sN=0:-d>a?sN=sD:(sN=-d,sD=a)):tN>tD&&(tN=tD,-d+b<0?sN=0:-d+b>a?sN=sD:(sN=-d+b,sD=a)),sc=0===sN?0:sN/sD;var dx=(1-(tc=0===tN?0:tN/tD))*x2+tc*x3-((1-sc)*x0+sc*x1),dy=(1-tc)*y2+tc*y3-((1-sc)*y0+sc*y1);return dx*dx+dy*dy}function compareByX(a,b){return a[0]===b[0]?a[1]-b[1]:a[0]-b[0]}Queue.default&&(Queue=Queue.default),module.exports=concaveman,module.exports.default=concaveman},{"point-in-polygon":68,rbush:72,"robust-predicates/umd/orient2d.min.js":77,tinyqueue:78}],45:[function(require,module,exports){var objectKeys=require("object-keys"),isArguments=require("is-arguments"),is=require("object-is"),isRegex=require("is-regex"),flags=require("regexp.prototype.flags"),isDate=require("is-date-object"),getTime=Date.prototype.getTime;function deepEqual(actual,expected,options){var opts=options||{};return!(opts.strict?!is(actual,expected):actual!==expected)||(!actual||!expected||"object"!=typeof actual&&"object"!=typeof expected?opts.strict?is(actual,expected):actual==expected:function(a,b,opts){var i,key;if(typeof a!=typeof b)return!1;if(isUndefinedOrNull(a)||isUndefinedOrNull(b))return!1;if(a.prototype!==b.prototype)return!1;if(isArguments(a)!==isArguments(b))return!1;var aIsRegex=isRegex(a),bIsRegex=isRegex(b);if(aIsRegex!==bIsRegex)return!1;if(aIsRegex||bIsRegex)return a.source===b.source&&flags(a)===flags(b);if(isDate(a)&&isDate(b))return getTime.call(a)===getTime.call(b);var aIsBuffer=isBuffer(a),bIsBuffer=isBuffer(b);if(aIsBuffer!==bIsBuffer)return!1;if(aIsBuffer||bIsBuffer){if(a.length!==b.length)return!1;for(i=0;i<a.length;i++)if(a[i]!==b[i])return!1;return!0}if(typeof a!=typeof b)return!1;try{var ka=objectKeys(a),kb=objectKeys(b)}catch(e){return!1}if(ka.length!==kb.length)return!1;for(ka.sort(),kb.sort(),i=ka.length-1;i>=0;i--)if(ka[i]!=kb[i])return!1;for(i=ka.length-1;i>=0;i--)if(key=ka[i],!deepEqual(a[key],b[key],opts))return!1;return!0}(actual,expected,opts))}function isUndefinedOrNull(value){return null===value||void 0===value}function isBuffer(x){return!(!x||"object"!=typeof x||"number"!=typeof x.length)&&("function"==typeof x.copy&&"function"==typeof x.slice&&!(x.length>0&&"number"!=typeof x[0]))}module.exports=deepEqual},{"is-arguments":57,"is-date-object":58,"is-regex":59,"object-is":61,"object-keys":65,"regexp.prototype.flags":74}],46:[function(require,module,exports){"use strict";var keys=require("object-keys"),hasSymbols="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),toStr=Object.prototype.toString,concat=Array.prototype.concat,origDefineProperty=Object.defineProperty,supportsDescriptors=origDefineProperty&&function(){var obj={};try{for(var _ in origDefineProperty(obj,"x",{enumerable:!1,value:obj}),obj)return!1;return obj.x===obj}catch(e){return!1}}(),defineProperty=function(object,name,value,predicate){var fn;name in object&&("function"!=typeof(fn=predicate)||"[object Function]"!==toStr.call(fn)||!predicate())||(supportsDescriptors?origDefineProperty(object,name,{configurable:!0,enumerable:!1,value:value,writable:!0}):object[name]=value)},defineProperties=function(object,map){var predicates=arguments.length>2?arguments[2]:{},props=keys(map);hasSymbols&&(props=concat.call(props,Object.getOwnPropertySymbols(map)));for(var i=0;i<props.length;i+=1)defineProperty(object,props[i],map[props[i]],predicates[props[i]])};defineProperties.supportsDescriptors=!!supportsDescriptors,module.exports=defineProperties},{"object-keys":65}],47:[function(require,module,exports){"use strict";function earcut(data,holeIndices,dim){dim=dim||2;var minX,minY,maxX,maxY,x,y,invSize,hasHoles=holeIndices&&holeIndices.length,outerLen=hasHoles?holeIndices[0]*dim:data.length,outerNode=linkedList(data,0,outerLen,dim,!0),triangles=[];if(!outerNode||outerNode.next===outerNode.prev)return triangles;if(hasHoles&&(outerNode=function(data,holeIndices,outerNode,dim){var i,len,start,end,list,queue=[];for(i=0,len=holeIndices.length;i<len;i++)start=holeIndices[i]*dim,end=i<len-1?holeIndices[i+1]*dim:data.length,(list=linkedList(data,start,end,dim,!1))===list.next&&(list.steiner=!0),queue.push(getLeftmost(list));for(queue.sort(compareX),i=0;i<queue.length;i++)outerNode=filterPoints(outerNode=eliminateHole(queue[i],outerNode),outerNode.next);return outerNode}(data,holeIndices,outerNode,dim)),data.length>80*dim){minX=maxX=data[0],minY=maxY=data[1];for(var i=dim;i<outerLen;i+=dim)x=data[i],y=data[i+1],x<minX&&(minX=x),y<minY&&(minY=y),x>maxX&&(maxX=x),y>maxY&&(maxY=y);invSize=0!==(invSize=Math.max(maxX-minX,maxY-minY))?1/invSize:0}return earcutLinked(outerNode,triangles,dim,minX,minY,invSize),triangles}function linkedList(data,start,end,dim,clockwise){var i,last;if(clockwise===signedArea(data,start,end,dim)>0)for(i=start;i<end;i+=dim)last=insertNode(i,data[i],data[i+1],last);else for(i=end-dim;i>=start;i-=dim)last=insertNode(i,data[i],data[i+1],last);return last&&equals(last,last.next)&&(removeNode(last),last=last.next),last}function filterPoints(start,end){if(!start)return start;end||(end=start);var again,p=start;do{if(again=!1,p.steiner||!equals(p,p.next)&&0!==area(p.prev,p,p.next))p=p.next;else{if(removeNode(p),(p=end=p.prev)===p.next)break;again=!0}}while(again||p!==end);return end}function earcutLinked(ear,triangles,dim,minX,minY,invSize,pass){if(ear){!pass&&invSize&&function(start,minX,minY,invSize){var p=start;do{null===p.z&&(p.z=zOrder(p.x,p.y,minX,minY,invSize)),p.prevZ=p.prev,p.nextZ=p.next,p=p.next}while(p!==start);p.prevZ.nextZ=null,p.prevZ=null,function(list){var i,p,q,e,tail,numMerges,pSize,qSize,inSize=1;do{for(p=list,list=null,tail=null,numMerges=0;p;){for(numMerges++,q=p,pSize=0,i=0;i<inSize&&(pSize++,q=q.nextZ);i++);for(qSize=inSize;pSize>0||qSize>0&&q;)0!==pSize&&(0===qSize||!q||p.z<=q.z)?(e=p,p=p.nextZ,pSize--):(e=q,q=q.nextZ,qSize--),tail?tail.nextZ=e:list=e,e.prevZ=tail,tail=e;p=q}tail.nextZ=null,inSize*=2}while(numMerges>1)}(p)}(ear,minX,minY,invSize);for(var prev,next,stop=ear;ear.prev!==ear.next;)if(prev=ear.prev,next=ear.next,invSize?isEarHashed(ear,minX,minY,invSize):isEar(ear))triangles.push(prev.i/dim),triangles.push(ear.i/dim),triangles.push(next.i/dim),removeNode(ear),ear=next.next,stop=next.next;else if((ear=next)===stop){pass?1===pass?earcutLinked(ear=cureLocalIntersections(filterPoints(ear),triangles,dim),triangles,dim,minX,minY,invSize,2):2===pass&&splitEarcut(ear,triangles,dim,minX,minY,invSize):earcutLinked(filterPoints(ear),triangles,dim,minX,minY,invSize,1);break}}}function isEar(ear){var a=ear.prev,b=ear,c=ear.next;if(area(a,b,c)>=0)return!1;for(var p=ear.next.next;p!==ear.prev;){if(pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function isEarHashed(ear,minX,minY,invSize){var a=ear.prev,b=ear,c=ear.next;if(area(a,b,c)>=0)return!1;for(var minTX=a.x<b.x?a.x<c.x?a.x:c.x:b.x<c.x?b.x:c.x,minTY=a.y<b.y?a.y<c.y?a.y:c.y:b.y<c.y?b.y:c.y,maxTX=a.x>b.x?a.x>c.x?a.x:c.x:b.x>c.x?b.x:c.x,maxTY=a.y>b.y?a.y>c.y?a.y:c.y:b.y>c.y?b.y:c.y,minZ=zOrder(minTX,minTY,minX,minY,invSize),maxZ=zOrder(maxTX,maxTY,minX,minY,invSize),p=ear.prevZ,n=ear.nextZ;p&&p.z>=minZ&&n&&n.z<=maxZ;){if(p!==ear.prev&&p!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,n!==ear.prev&&n!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,n.x,n.y)&&area(n.prev,n,n.next)>=0)return!1;n=n.nextZ}for(;p&&p.z>=minZ;){if(p!==ear.prev&&p!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;n&&n.z<=maxZ;){if(n!==ear.prev&&n!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,n.x,n.y)&&area(n.prev,n,n.next)>=0)return!1;n=n.nextZ}return!0}function cureLocalIntersections(start,triangles,dim){var p=start;do{var a=p.prev,b=p.next.next;!equals(a,b)&&intersects(a,p,p.next,b)&&locallyInside(a,b)&&locallyInside(b,a)&&(triangles.push(a.i/dim),triangles.push(p.i/dim),triangles.push(b.i/dim),removeNode(p),removeNode(p.next),p=start=b),p=p.next}while(p!==start);return filterPoints(p)}function splitEarcut(start,triangles,dim,minX,minY,invSize){var a=start;do{for(var b=a.next.next;b!==a.prev;){if(a.i!==b.i&&isValidDiagonal(a,b)){var c=splitPolygon(a,b);return a=filterPoints(a,a.next),c=filterPoints(c,c.next),earcutLinked(a,triangles,dim,minX,minY,invSize),void earcutLinked(c,triangles,dim,minX,minY,invSize)}b=b.next}a=a.next}while(a!==start)}function compareX(a,b){return a.x-b.x}function eliminateHole(hole,outerNode){var bridge=function(hole,outerNode){var m,p=outerNode,hx=hole.x,hy=hole.y,qx=-1/0;do{if(hy<=p.y&&hy>=p.next.y&&p.next.y!==p.y){var x=p.x+(hy-p.y)*(p.next.x-p.x)/(p.next.y-p.y);if(x<=hx&&x>qx){if(qx=x,x===hx){if(hy===p.y)return p;if(hy===p.next.y)return p.next}m=p.x<p.next.x?p:p.next}}p=p.next}while(p!==outerNode);if(!m)return null;if(hx===qx)return m;var tan,stop=m,mx=m.x,my=m.y,tanMin=1/0;p=m;do{hx>=p.x&&p.x>=mx&&hx!==p.x&&pointInTriangle(hy<my?hx:qx,hy,mx,my,hy<my?qx:hx,hy,p.x,p.y)&&(tan=Math.abs(hy-p.y)/(hx-p.x),locallyInside(p,hole)&&(tan<tanMin||tan===tanMin&&(p.x>m.x||p.x===m.x&&sectorContainsSector(m,p)))&&(m=p,tanMin=tan)),p=p.next}while(p!==stop);return m}(hole,outerNode);if(!bridge)return outerNode;var bridgeReverse=splitPolygon(bridge,hole),filteredBridge=filterPoints(bridge,bridge.next);return filterPoints(bridgeReverse,bridgeReverse.next),outerNode===bridge?filteredBridge:outerNode}function sectorContainsSector(m,p){return area(m.prev,m,p.prev)<0&&area(p.next,m,m.next)<0}function zOrder(x,y,minX,minY,invSize){return(x=1431655765&((x=858993459&((x=252645135&((x=16711935&((x=32767*(x-minX)*invSize)|x<<8))|x<<4))|x<<2))|x<<1))|(y=1431655765&((y=858993459&((y=252645135&((y=16711935&((y=32767*(y-minY)*invSize)|y<<8))|y<<4))|y<<2))|y<<1))<<1}function getLeftmost(start){var p=start,leftmost=start;do{(p.x<leftmost.x||p.x===leftmost.x&&p.y<leftmost.y)&&(leftmost=p),p=p.next}while(p!==start);return leftmost}function pointInTriangle(ax,ay,bx,by,cx,cy,px,py){return(cx-px)*(ay-py)-(ax-px)*(cy-py)>=0&&(ax-px)*(by-py)-(bx-px)*(ay-py)>=0&&(bx-px)*(cy-py)-(cx-px)*(by-py)>=0}function isValidDiagonal(a,b){return a.next.i!==b.i&&a.prev.i!==b.i&&!function(a,b){var p=a;do{if(p.i!==a.i&&p.next.i!==a.i&&p.i!==b.i&&p.next.i!==b.i&&intersects(p,p.next,a,b))return!0;p=p.next}while(p!==a);return!1}(a,b)&&(locallyInside(a,b)&&locallyInside(b,a)&&function(a,b){var p=a,inside=!1,px=(a.x+b.x)/2,py=(a.y+b.y)/2;do{p.y>py!=p.next.y>py&&p.next.y!==p.y&&px<(p.next.x-p.x)*(py-p.y)/(p.next.y-p.y)+p.x&&(inside=!inside),p=p.next}while(p!==a);return inside}(a,b)&&(area(a.prev,a,b.prev)||area(a,b.prev,b))||equals(a,b)&&area(a.prev,a,a.next)>0&&area(b.prev,b,b.next)>0)}function area(p,q,r){return(q.y-p.y)*(r.x-q.x)-(q.x-p.x)*(r.y-q.y)}function equals(p1,p2){return p1.x===p2.x&&p1.y===p2.y}function intersects(p1,q1,p2,q2){var o1=sign(area(p1,q1,p2)),o2=sign(area(p1,q1,q2)),o3=sign(area(p2,q2,p1)),o4=sign(area(p2,q2,q1));return o1!==o2&&o3!==o4||(!(0!==o1||!onSegment(p1,p2,q1))||(!(0!==o2||!onSegment(p1,q2,q1))||(!(0!==o3||!onSegment(p2,p1,q2))||!(0!==o4||!onSegment(p2,q1,q2)))))}function onSegment(p,q,r){return q.x<=Math.max(p.x,r.x)&&q.x>=Math.min(p.x,r.x)&&q.y<=Math.max(p.y,r.y)&&q.y>=Math.min(p.y,r.y)}function sign(num){return num>0?1:num<0?-1:0}function locallyInside(a,b){return area(a.prev,a,a.next)<0?area(a,b,a.next)>=0&&area(a,a.prev,b)>=0:area(a,b,a.prev)<0||area(a,a.next,b)<0}function splitPolygon(a,b){var a2=new Node(a.i,a.x,a.y),b2=new Node(b.i,b.x,b.y),an=a.next,bp=b.prev;return a.next=b,b.prev=a,a2.next=an,an.prev=a2,b2.next=a2,a2.prev=b2,bp.next=b2,b2.prev=bp,b2}function insertNode(i,x,y,last){var p=new Node(i,x,y);return last?(p.next=last.next,p.prev=last,last.next.prev=p,last.next=p):(p.prev=p,p.next=p),p}function removeNode(p){p.next.prev=p.prev,p.prev.next=p.next,p.prevZ&&(p.prevZ.nextZ=p.nextZ),p.nextZ&&(p.nextZ.prevZ=p.prevZ)}function Node(i,x,y){this.i=i,this.x=x,this.y=y,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function signedArea(data,start,end,dim){for(var sum=0,i=start,j=end-dim;i<end;i+=dim)sum+=(data[j]-data[i])*(data[i+1]+data[j+1]),j=i;return sum}module.exports=earcut,module.exports.default=earcut,earcut.deviation=function(data,holeIndices,dim,triangles){var hasHoles=holeIndices&&holeIndices.length,outerLen=hasHoles?holeIndices[0]*dim:data.length,polygonArea=Math.abs(signedArea(data,0,outerLen,dim));if(hasHoles)for(var i=0,len=holeIndices.length;i<len;i++){var start=holeIndices[i]*dim,end=i<len-1?holeIndices[i+1]*dim:data.length;polygonArea-=Math.abs(signedArea(data,start,end,dim))}var trianglesArea=0;for(i=0;i<triangles.length;i+=3){var a=triangles[i]*dim,b=triangles[i+1]*dim,c=triangles[i+2]*dim;trianglesArea+=Math.abs((data[a]-data[c])*(data[b+1]-data[a+1])-(data[a]-data[b])*(data[c+1]-data[a+1]))}return 0===polygonArea&&0===trianglesArea?0:Math.abs((trianglesArea-polygonArea)/polygonArea)},earcut.flatten=function(data){for(var dim=data[0][0].length,result={vertices:[],holes:[],dimensions:dim},holeIndex=0,i=0;i<data.length;i++){for(var j=0;j<data[i].length;j++)for(var d=0;d<dim;d++)result.vertices.push(data[i][j][d]);i>0&&(holeIndex+=data[i-1].length,result.holes.push(holeIndex))}return result}},{}],48:[function(require,module,exports){"use strict";var slice=Array.prototype.slice,toStr=Object.prototype.toString;module.exports=function(that){var target=this;if("function"!=typeof target||"[object Function]"!==toStr.call(target))throw new TypeError("Function.prototype.bind called on incompatible "+target);for(var bound,args=slice.call(arguments,1),boundLength=Math.max(0,target.length-args.length),boundArgs=[],i=0;i<boundLength;i++)boundArgs.push("$"+i);if(bound=Function("binder","return function ("+boundArgs.join(",")+"){ return binder.apply(this,arguments); }")(function(){if(this instanceof bound){var result=target.apply(this,args.concat(slice.call(arguments)));return Object(result)===result?result:this}return target.apply(that,args.concat(slice.call(arguments)))}),target.prototype){var Empty=function(){};Empty.prototype=target.prototype,bound.prototype=new Empty,Empty.prototype=null}return bound}},{}],49:[function(require,module,exports){"use strict";var implementation=require("./implementation");module.exports=Function.prototype.bind||implementation},{"./implementation":48}],50:[function(require,module,exports){var deepEqual=require("deep-equal"),Equality=function(opt){this.precision=opt&&opt.precision?opt.precision:17,this.direction=!(!opt||!opt.direction)&&opt.direction,this.pseudoNode=!(!opt||!opt.pseudoNode)&&opt.pseudoNode,this.objectComparator=opt&&opt.objectComparator?opt.objectComparator:objectComparator};function explode(g){return g.coordinates.map(function(part){return{type:g.type.replace("Multi",""),coordinates:part}})}function sameLength(g1,g2){return g1.hasOwnProperty("coordinates")?g1.coordinates.length===g2.coordinates.length:g1.length===g2.length}function objectComparator(obj1,obj2){return deepEqual(obj1,obj2,{strict:!0})}Equality.prototype.compare=function(g1,g2){if(g1.type!==g2.type||!sameLength(g1,g2))return!1;switch(g1.type){case"Point":return this.compareCoord(g1.coordinates,g2.coordinates);case"LineString":return this.compareLine(g1.coordinates,g2.coordinates,0,!1);case"Polygon":return this.comparePolygon(g1,g2);case"Feature":return this.compareFeature(g1,g2);default:if(0===g1.type.indexOf("Multi")){var context=this,g1s=explode(g1),g2s=explode(g2);return g1s.every(function(g1part){return this.some(function(g2part){return context.compare(g1part,g2part)})},g2s)}}return!1},Equality.prototype.compareCoord=function(c1,c2){if(c1.length!==c2.length)return!1;for(var i=0;i<c1.length;i++)if(c1[i].toFixed(this.precision)!==c2[i].toFixed(this.precision))return!1;return!0},Equality.prototype.compareLine=function(path1,path2,ind,isPoly){if(!sameLength(path1,path2))return!1;var p1=this.pseudoNode?path1:this.removePseudo(path1),p2=this.pseudoNode?path2:this.removePseudo(path2);if(!isPoly||this.compareCoord(p1[0],p2[0])||(p2=this.fixStartIndex(p2,p1))){var sameDirection=this.compareCoord(p1[ind],p2[ind]);return this.direction||sameDirection?this.comparePath(p1,p2):!!this.compareCoord(p1[ind],p2[p2.length-(1+ind)])&&this.comparePath(p1.slice().reverse(),p2)}},Equality.prototype.fixStartIndex=function(sourcePath,targetPath){for(var correctPath,ind=-1,i=0;i<sourcePath.length;i++)if(this.compareCoord(sourcePath[i],targetPath[0])){ind=i;break}return ind>=0&&(correctPath=[].concat(sourcePath.slice(ind,sourcePath.length),sourcePath.slice(1,ind+1))),correctPath},Equality.prototype.comparePath=function(p1,p2){var cont=this;return p1.every(function(c,i){return cont.compareCoord(c,this[i])},p2)},Equality.prototype.comparePolygon=function(g1,g2){if(this.compareLine(g1.coordinates[0],g2.coordinates[0],1,!0)){var holes1=g1.coordinates.slice(1,g1.coordinates.length),holes2=g2.coordinates.slice(1,g2.coordinates.length),cont=this;return holes1.every(function(h1){return this.some(function(h2){return cont.compareLine(h1,h2,1,!0)})},holes2)}return!1},Equality.prototype.compareFeature=function(g1,g2){return!(g1.id!==g2.id||!this.objectComparator(g1.properties,g2.properties)||!this.compareBBox(g1,g2))&&this.compare(g1.geometry,g2.geometry)},Equality.prototype.compareBBox=function(g1,g2){return!!(!g1.bbox&&!g2.bbox||g1.bbox&&g2.bbox&&this.compareCoord(g1.bbox,g2.bbox))},Equality.prototype.removePseudo=function(path){return path},module.exports=Equality},{"deep-equal":45}],51:[function(require,module,exports){var rbush=require("rbush"),helpers=require("@turf/helpers"),meta=require("@turf/meta"),turfBBox=require("@turf/bbox").default,featureEach=meta.featureEach,featureCollection=(meta.coordEach,helpers.polygon,helpers.featureCollection);function geojsonRbush(maxEntries){var tree=new rbush(maxEntries);return tree.insert=function(feature){if("Feature"!==feature.type)throw new Error("invalid feature");return feature.bbox=feature.bbox?feature.bbox:turfBBox(feature),rbush.prototype.insert.call(this,feature)},tree.load=function(features){var load=[];return Array.isArray(features)?features.forEach(function(feature){if("Feature"!==feature.type)throw new Error("invalid features");feature.bbox=feature.bbox?feature.bbox:turfBBox(feature),load.push(feature)}):featureEach(features,function(feature){if("Feature"!==feature.type)throw new Error("invalid features");feature.bbox=feature.bbox?feature.bbox:turfBBox(feature),load.push(feature)}),rbush.prototype.load.call(this,load)},tree.remove=function(feature,equals){if("Feature"!==feature.type)throw new Error("invalid feature");return feature.bbox=feature.bbox?feature.bbox:turfBBox(feature),rbush.prototype.remove.call(this,feature,equals)},tree.clear=function(){return rbush.prototype.clear.call(this)},tree.search=function(geojson){var features=rbush.prototype.search.call(this,this.toBBox(geojson));return featureCollection(features)},tree.collides=function(geojson){return rbush.prototype.collides.call(this,this.toBBox(geojson))},tree.all=function(){var features=rbush.prototype.all.call(this);return featureCollection(features)},tree.toJSON=function(){return rbush.prototype.toJSON.call(this)},tree.fromJSON=function(json){return rbush.prototype.fromJSON.call(this,json)},tree.toBBox=function(geojson){var bbox;if(geojson.bbox)bbox=geojson.bbox;else if(Array.isArray(geojson)&&4===geojson.length)bbox=geojson;else if(Array.isArray(geojson)&&6===geojson.length)bbox=[geojson[0],geojson[1],geojson[3],geojson[4]];else if("Feature"===geojson.type)bbox=turfBBox(geojson);else{if("FeatureCollection"!==geojson.type)throw new Error("invalid geojson");bbox=turfBBox(geojson)}return{minX:bbox[0],minY:bbox[1],maxX:bbox[2],maxY:bbox[3]}},tree}module.exports=geojsonRbush,module.exports.default=geojsonRbush},{"@turf/bbox":4,"@turf/helpers":21,"@turf/meta":28,rbush:72}],52:[function(require,module,exports){"use strict";var $SyntaxError=SyntaxError,$Function=Function,$TypeError=TypeError,getEvalledConstructor=function(expressionSyntax){try{return $Function('"use strict"; return ('+expressionSyntax+").constructor;")()}catch(e){}},$gOPD=Object.getOwnPropertyDescriptor;if($gOPD)try{$gOPD({},"")}catch(e){$gOPD=null}var throwTypeError=function(){throw new $TypeError},ThrowTypeError=$gOPD?function(){try{return arguments.callee,throwTypeError}catch(calleeThrows){try{return $gOPD(arguments,"callee").get}catch(gOPDthrows){return throwTypeError}}}():throwTypeError,hasSymbols=require("has-symbols")(),getProto=Object.getPrototypeOf||function(x){return x.__proto__},needsEval={},TypedArray="undefined"==typeof Uint8Array?void 0:getProto(Uint8Array),INTRINSICS={"%AggregateError%":"undefined"==typeof AggregateError?void 0:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer,"%ArrayIteratorPrototype%":hasSymbols?getProto([][Symbol.iterator]()):void 0,"%AsyncFromSyncIteratorPrototype%":void 0,"%AsyncFunction%":needsEval,"%AsyncGenerator%":needsEval,"%AsyncGeneratorFunction%":needsEval,"%AsyncIteratorPrototype%":needsEval,"%Atomics%":"undefined"==typeof Atomics?void 0:Atomics,"%BigInt%":"undefined"==typeof BigInt?void 0:BigInt,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?void 0:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%eval%":eval,"%EvalError%":EvalError,"%Float32Array%":"undefined"==typeof Float32Array?void 0:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?void 0:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?void 0:FinalizationRegistry,"%Function%":$Function,"%GeneratorFunction%":needsEval,"%Int8Array%":"undefined"==typeof Int8Array?void 0:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?void 0:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?void 0:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":hasSymbols?getProto(getProto([][Symbol.iterator]())):void 0,"%JSON%":"object"==typeof JSON?JSON:void 0,"%Map%":"undefined"==typeof Map?void 0:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&hasSymbols?getProto((new Map)[Symbol.iterator]()):void 0,"%Math%":Math,"%Number%":Number,"%Object%":Object,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?void 0:Promise,"%Proxy%":"undefined"==typeof Proxy?void 0:Proxy,"%RangeError%":RangeError,"%ReferenceError%":ReferenceError,"%Reflect%":"undefined"==typeof Reflect?void 0:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?void 0:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&hasSymbols?getProto((new Set)[Symbol.iterator]()):void 0,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":hasSymbols?getProto(""[Symbol.iterator]()):void 0,"%Symbol%":hasSymbols?Symbol:void 0,"%SyntaxError%":$SyntaxError,"%ThrowTypeError%":ThrowTypeError,"%TypedArray%":TypedArray,"%TypeError%":$TypeError,"%Uint8Array%":"undefined"==typeof Uint8Array?void 0:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?void 0:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?void 0:Uint32Array,"%URIError%":URIError,"%WeakMap%":"undefined"==typeof WeakMap?void 0:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?void 0:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?void 0:WeakSet},LEGACY_ALIASES={"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},bind=require("function-bind"),hasOwn=require("has"),$concat=bind.call(Function.call,Array.prototype.concat),$spliceApply=bind.call(Function.apply,Array.prototype.splice),$replace=bind.call(Function.call,String.prototype.replace),$strSlice=bind.call(Function.call,String.prototype.slice),rePropName=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,reEscapeChar=/\\(\\)?/g,getBaseIntrinsic=function(name,allowMissing){var alias,intrinsicName=name;if(hasOwn(LEGACY_ALIASES,intrinsicName)&&(intrinsicName="%"+(alias=LEGACY_ALIASES[intrinsicName])[0]+"%"),hasOwn(INTRINSICS,intrinsicName)){var value=INTRINSICS[intrinsicName];if(value===needsEval&&(value=function doEval(name){var value;if("%AsyncFunction%"===name)value=getEvalledConstructor("async function () {}");else if("%GeneratorFunction%"===name)value=getEvalledConstructor("function* () {}");else if("%AsyncGeneratorFunction%"===name)value=getEvalledConstructor("async function* () {}");else if("%AsyncGenerator%"===name){var fn=doEval("%AsyncGeneratorFunction%");fn&&(value=fn.prototype)}else if("%AsyncIteratorPrototype%"===name){var gen=doEval("%AsyncGenerator%");gen&&(value=getProto(gen.prototype))}return INTRINSICS[name]=value,value}(intrinsicName)),void 0===value&&!allowMissing)throw new $TypeError("intrinsic "+name+" exists, but is not available. Please file an issue!");return{alias:alias,name:intrinsicName,value:value}}throw new $SyntaxError("intrinsic "+name+" does not exist!")};module.exports=function(name,allowMissing){if("string"!=typeof name||0===name.length)throw new $TypeError("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof allowMissing)throw new $TypeError('"allowMissing" argument must be a boolean');var parts=function(string){var first=$strSlice(string,0,1),last=$strSlice(string,-1);if("%"===first&&"%"!==last)throw new $SyntaxError("invalid intrinsic syntax, expected closing `%`");if("%"===last&&"%"!==first)throw new $SyntaxError("invalid intrinsic syntax, expected opening `%`");var result=[];return $replace(string,rePropName,function(match,number,quote,subString){result[result.length]=quote?$replace(subString,reEscapeChar,"$1"):number||match}),result}(name),intrinsicBaseName=parts.length>0?parts[0]:"",intrinsic=getBaseIntrinsic("%"+intrinsicBaseName+"%",allowMissing),intrinsicRealName=intrinsic.name,value=intrinsic.value,skipFurtherCaching=!1,alias=intrinsic.alias;alias&&(intrinsicBaseName=alias[0],$spliceApply(parts,$concat([0,1],alias)));for(var i=1,isOwn=!0;i<parts.length;i+=1){var part=parts[i],first=$strSlice(part,0,1),last=$strSlice(part,-1);if(('"'===first||"'"===first||"`"===first||'"'===last||"'"===last||"`"===last)&&first!==last)throw new $SyntaxError("property names with quotes must have matching quotes");if("constructor"!==part&&isOwn||(skipFurtherCaching=!0),hasOwn(INTRINSICS,intrinsicRealName="%"+(intrinsicBaseName+="."+part)+"%"))value=INTRINSICS[intrinsicRealName];else if(null!=value){if(!(part in value)){if(!allowMissing)throw new $TypeError("base intrinsic for "+name+" exists, but the property is not available.");return}if($gOPD&&i+1>=parts.length){var desc=$gOPD(value,part);value=(isOwn=!!desc)&&"get"in desc&&!("originalValue"in desc.get)?desc.get:value[part]}else isOwn=hasOwn(value,part),value=value[part];isOwn&&!skipFurtherCaching&&(INTRINSICS[intrinsicRealName]=value)}}return value}},{"function-bind":49,has:56,"has-symbols":53}],53:[function(require,module,exports){"use strict";var origSymbol="undefined"!=typeof Symbol&&Symbol,hasSymbolSham=require("./shams");module.exports=function(){return"function"==typeof origSymbol&&("function"==typeof Symbol&&("symbol"==typeof origSymbol("foo")&&("symbol"==typeof Symbol("bar")&&hasSymbolSham())))}},{"./shams":54}],54:[function(require,module,exports){"use strict";module.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var obj={},sym=Symbol("test"),symObj=Object(sym);if("string"==typeof sym)return!1;if("[object Symbol]"!==Object.prototype.toString.call(sym))return!1;if("[object Symbol]"!==Object.prototype.toString.call(symObj))return!1;for(sym in obj[sym]=42,obj)return!1;if("function"==typeof Object.keys&&0!==Object.keys(obj).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(obj).length)return!1;var syms=Object.getOwnPropertySymbols(obj);if(1!==syms.length||syms[0]!==sym)return!1;if(!Object.prototype.propertyIsEnumerable.call(obj,sym))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var descriptor=Object.getOwnPropertyDescriptor(obj,sym);if(42!==descriptor.value||!0!==descriptor.enumerable)return!1}return!0}},{}],55:[function(require,module,exports){"use strict";var hasSymbols=require("has-symbols/shams");module.exports=function(){return hasSymbols()&&!!Symbol.toStringTag}},{"has-symbols/shams":54}],56:[function(require,module,exports){"use strict";var bind=require("function-bind");module.exports=bind.call(Function.call,Object.prototype.hasOwnProperty)},{"function-bind":49}],57:[function(require,module,exports){"use strict";var hasToStringTag=require("has-tostringtag/shams")(),$toString=require("call-bind/callBound")("Object.prototype.toString"),isStandardArguments=function(value){return!(hasToStringTag&&value&&"object"==typeof value&&Symbol.toStringTag in value)&&"[object Arguments]"===$toString(value)},isLegacyArguments=function(value){return!!isStandardArguments(value)||null!==value&&"object"==typeof value&&"number"==typeof value.length&&value.length>=0&&"[object Array]"!==$toString(value)&&"[object Function]"===$toString(value.callee)},supportsStandardArguments=function(){return isStandardArguments(arguments)}();isStandardArguments.isLegacyArguments=isLegacyArguments,module.exports=supportsStandardArguments?isStandardArguments:isLegacyArguments},{"call-bind/callBound":42,"has-tostringtag/shams":55}],58:[function(require,module,exports){"use strict";var getDay=Date.prototype.getDay,toStr=Object.prototype.toString,hasToStringTag=require("has-tostringtag/shams")();module.exports=function(value){return"object"==typeof value&&null!==value&&(hasToStringTag?function(value){try{return getDay.call(value),!0}catch(e){return!1}}(value):"[object Date]"===toStr.call(value))}},{"has-tostringtag/shams":55}],59:[function(require,module,exports){"use strict";var has,$exec,isRegexMarker,badStringifier,callBound=require("call-bind/callBound"),hasToStringTag=require("has-tostringtag/shams")();if(hasToStringTag){has=callBound("Object.prototype.hasOwnProperty"),$exec=callBound("RegExp.prototype.exec"),isRegexMarker={};var throwRegexMarker=function(){throw isRegexMarker};badStringifier={toString:throwRegexMarker,valueOf:throwRegexMarker},"symbol"==typeof Symbol.toPrimitive&&(badStringifier[Symbol.toPrimitive]=throwRegexMarker)}var $toString=callBound("Object.prototype.toString"),gOPD=Object.getOwnPropertyDescriptor;module.exports=hasToStringTag?function(value){if(!value||"object"!=typeof value)return!1;var descriptor=gOPD(value,"lastIndex");if(!(descriptor&&has(descriptor,"value")))return!1;try{$exec(value,badStringifier)}catch(e){return e===isRegexMarker}}:function(value){return!(!value||"object"!=typeof value&&"function"!=typeof value)&&"[object RegExp]"===$toString(value)}},{"call-bind/callBound":42,"has-tostringtag/shams":55}],60:[function(require,module,exports){"use strict";var numberIsNaN=function(value){return value!=value};module.exports=function(a,b){return 0===a&&0===b?1/a==1/b:a===b||!(!numberIsNaN(a)||!numberIsNaN(b))}},{}],61:[function(require,module,exports){"use strict";var define=require("define-properties"),callBind=require("call-bind"),implementation=require("./implementation"),getPolyfill=require("./polyfill"),shim=require("./shim"),polyfill=callBind(getPolyfill(),Object);define(polyfill,{getPolyfill:getPolyfill,implementation:implementation,shim:shim}),module.exports=polyfill},{"./implementation":60,"./polyfill":62,"./shim":63,"call-bind":43,"define-properties":46}],62:[function(require,module,exports){"use strict";var implementation=require("./implementation");module.exports=function(){return"function"==typeof Object.is?Object.is:implementation}},{"./implementation":60}],63:[function(require,module,exports){"use strict";var getPolyfill=require("./polyfill"),define=require("define-properties");module.exports=function(){var polyfill=getPolyfill();return define(Object,{is:polyfill},{is:function(){return Object.is!==polyfill}}),polyfill}},{"./polyfill":62,"define-properties":46}],64:[function(require,module,exports){"use strict";var keysShim;if(!Object.keys){var has=Object.prototype.hasOwnProperty,toStr=Object.prototype.toString,isArgs=require("./isArguments"),isEnumerable=Object.prototype.propertyIsEnumerable,hasDontEnumBug=!isEnumerable.call({toString:null},"toString"),hasProtoEnumBug=isEnumerable.call(function(){},"prototype"),dontEnums=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],equalsConstructorPrototype=function(o){var ctor=o.constructor;return ctor&&ctor.prototype===o},excludedKeys={$applicationCache:!0,$console:!0,$external:!0,$frame:!0,$frameElement:!0,$frames:!0,$innerHeight:!0,$innerWidth:!0,$onmozfullscreenchange:!0,$onmozfullscreenerror:!0,$outerHeight:!0,$outerWidth:!0,$pageXOffset:!0,$pageYOffset:!0,$parent:!0,$scrollLeft:!0,$scrollTop:!0,$scrollX:!0,$scrollY:!0,$self:!0,$webkitIndexedDB:!0,$webkitStorageInfo:!0,$window:!0},hasAutomationEqualityBug=function(){if("undefined"==typeof window)return!1;for(var k in window)try{if(!excludedKeys["$"+k]&&has.call(window,k)&&null!==window[k]&&"object"==typeof window[k])try{equalsConstructorPrototype(window[k])}catch(e){return!0}}catch(e){return!0}return!1}();keysShim=function(object){var isObject=null!==object&&"object"==typeof object,isFunction="[object Function]"===toStr.call(object),isArguments=isArgs(object),isString=isObject&&"[object String]"===toStr.call(object),theKeys=[];if(!isObject&&!isFunction&&!isArguments)throw new TypeError("Object.keys called on a non-object");var skipProto=hasProtoEnumBug&&isFunction;if(isString&&object.length>0&&!has.call(object,0))for(var i=0;i<object.length;++i)theKeys.push(String(i));if(isArguments&&object.length>0)for(var j=0;j<object.length;++j)theKeys.push(String(j));else for(var name in object)skipProto&&"prototype"===name||!has.call(object,name)||theKeys.push(String(name));if(hasDontEnumBug)for(var skipConstructor=function(o){if("undefined"==typeof window||!hasAutomationEqualityBug)return equalsConstructorPrototype(o);try{return equalsConstructorPrototype(o)}catch(e){return!1}}(object),k=0;k<dontEnums.length;++k)skipConstructor&&"constructor"===dontEnums[k]||!has.call(object,dontEnums[k])||theKeys.push(dontEnums[k]);return theKeys}}module.exports=keysShim},{"./isArguments":66}],65:[function(require,module,exports){"use strict";var slice=Array.prototype.slice,isArgs=require("./isArguments"),origKeys=Object.keys,keysShim=origKeys?function(o){return origKeys(o)}:require("./implementation"),originalKeys=Object.keys;keysShim.shim=function(){Object.keys?function(){var args=Object.keys(arguments);return args&&args.length===arguments.length}(1,2)||(Object.keys=function(object){return isArgs(object)?originalKeys(slice.call(object)):originalKeys(object)}):Object.keys=keysShim;return Object.keys||keysShim},module.exports=keysShim},{"./implementation":64,"./isArguments":66}],66:[function(require,module,exports){"use strict";var toStr=Object.prototype.toString;module.exports=function(value){var str=toStr.call(value),isArgs="[object Arguments]"===str;return isArgs||(isArgs="[object Array]"!==str&&null!==value&&"object"==typeof value&&"number"==typeof value.length&&value.length>=0&&"[object Function]"===toStr.call(value.callee)),isArgs}},{}],67:[function(require,module,exports){module.exports=function(point,vs,start,end){var x=point[0],y=point[1],inside=!1;void 0===start&&(start=0),void 0===end&&(end=vs.length);for(var len=(end-start)/2,i=0,j=len-1;i<len;j=i++){var xi=vs[start+2*i+0],yi=vs[start+2*i+1],xj=vs[start+2*j+0],yj=vs[start+2*j+1];yi>y!=yj>y&&x<(xj-xi)*(y-yi)/(yj-yi)+xi&&(inside=!inside)}return inside}},{}],68:[function(require,module,exports){var pointInPolygonFlat=require("./flat.js"),pointInPolygonNested=require("./nested.js");module.exports=function(point,vs,start,end){return vs.length>0&&Array.isArray(vs[0])?pointInPolygonNested(point,vs,start,end):pointInPolygonFlat(point,vs,start,end)},module.exports.nested=pointInPolygonNested,module.exports.flat=pointInPolygonFlat},{"./flat.js":67,"./nested.js":69}],69:[function(require,module,exports){module.exports=function(point,vs,start,end){var x=point[0],y=point[1],inside=!1;void 0===start&&(start=0),void 0===end&&(end=vs.length);for(var len=end-start,i=0,j=len-1;i<len;j=i++){var xi=vs[i+start][0],yi=vs[i+start][1],xj=vs[j+start][0],yj=vs[j+start][1];yi>y!=yj>y&&x<(xj-xi)*(y-yi)/(yj-yi)+xi&&(inside=!inside)}return inside}},{}],70:[function(require,module,exports){(function(process){(function(){var global,factory;global=this,factory=function(){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}var Node=function(){return function(key,data){this.next=null,this.key=key,this.data=data,this.left=null,this.right=null}}();function DEFAULT_COMPARE(a,b){return a>b?1:a<b?-1:0}function splay(i,t,comparator){for(var N=new Node(null,null),l=N,r=N;;){var cmp=comparator(i,t.key);if(cmp<0){if(null===t.left)break;if(comparator(i,t.left.key)<0){var y=t.left;if(t.left=y.right,y.right=t,null===(t=y).left)break}r.left=t,r=t,t=t.left}else{if(!(cmp>0))break;if(null===t.right)break;if(comparator(i,t.right.key)>0){y=t.right;if(t.right=y.left,y.left=t,null===(t=y).right)break}l.right=t,l=t,t=t.right}}return l.right=t.left,r.left=t.right,t.left=N.right,t.right=N.left,t}function insert(i,data,t,comparator){var node=new Node(i,data);if(null===t)return node.left=node.right=null,node;var cmp=comparator(i,(t=splay(i,t,comparator)).key);return cmp<0?(node.left=t.left,node.right=t,t.left=null):cmp>=0&&(node.right=t.right,node.left=t,t.right=null),node}function split(key,v,comparator){var left=null,right=null;if(v){var cmp=comparator((v=splay(key,v,comparator)).key,key);0===cmp?(left=v.left,right=v.right):cmp<0?(right=v.right,v.right=null,left=v):(left=v.left,v.left=null,right=v)}return{left:left,right:right}}var Tree=function(){function Tree(comparator){void 0===comparator&&(comparator=DEFAULT_COMPARE),this._root=null,this._size=0,this._comparator=comparator}return Tree.prototype.insert=function(key,data){return this._size++,this._root=insert(key,data,this._root,this._comparator)},Tree.prototype.add=function(key,data){var node=new Node(key,data);null===this._root&&(node.left=node.right=null,this._size++,this._root=node);var comparator=this._comparator,t=splay(key,this._root,comparator),cmp=comparator(key,t.key);return 0===cmp?this._root=t:(cmp<0?(node.left=t.left,node.right=t,t.left=null):cmp>0&&(node.right=t.right,node.left=t,t.right=null),this._size++,this._root=node),this._root},Tree.prototype.remove=function(key){this._root=this._remove(key,this._root,this._comparator)},Tree.prototype._remove=function(i,t,comparator){var x;return null===t?null:0===comparator(i,(t=splay(i,t,comparator)).key)?(null===t.left?x=t.right:(x=splay(i,t.left,comparator)).right=t.right,this._size--,x):t},Tree.prototype.pop=function(){var node=this._root;if(node){for(;node.left;)node=node.left;return this._root=splay(node.key,this._root,this._comparator),this._root=this._remove(node.key,this._root,this._comparator),{key:node.key,data:node.data}}return null},Tree.prototype.findStatic=function(key){for(var current=this._root,compare=this._comparator;current;){var cmp=compare(key,current.key);if(0===cmp)return current;current=cmp<0?current.left:current.right}return null},Tree.prototype.find=function(key){return this._root&&(this._root=splay(key,this._root,this._comparator),0!==this._comparator(key,this._root.key))?null:this._root},Tree.prototype.contains=function(key){for(var current=this._root,compare=this._comparator;current;){var cmp=compare(key,current.key);if(0===cmp)return!0;current=cmp<0?current.left:current.right}return!1},Tree.prototype.forEach=function(visitor,ctx){for(var current=this._root,Q=[],done=!1;!done;)null!==current?(Q.push(current),current=current.left):0!==Q.length?(current=Q.pop(),visitor.call(ctx,current),current=current.right):done=!0;return this},Tree.prototype.range=function(low,high,fn,ctx){for(var Q=[],compare=this._comparator,node=this._root;0!==Q.length||node;)if(node)Q.push(node),node=node.left;else{if(compare((node=Q.pop()).key,high)>0)break;if(compare(node.key,low)>=0&&fn.call(ctx,node))return this;node=node.right}return this},Tree.prototype.keys=function(){var keys=[];return this.forEach(function(_a){var key=_a.key;return keys.push(key)}),keys},Tree.prototype.values=function(){var values=[];return this.forEach(function(_a){var data=_a.data;return values.push(data)}),values},Tree.prototype.min=function(){return this._root?this.minNode(this._root).key:null},Tree.prototype.max=function(){return this._root?this.maxNode(this._root).key:null},Tree.prototype.minNode=function(t){if(void 0===t&&(t=this._root),t)for(;t.left;)t=t.left;return t},Tree.prototype.maxNode=function(t){if(void 0===t&&(t=this._root),t)for(;t.right;)t=t.right;return t},Tree.prototype.at=function(index){for(var current=this._root,done=!1,i=0,Q=[];!done;)if(current)Q.push(current),current=current.left;else if(Q.length>0){if(current=Q.pop(),i===index)return current;i++,current=current.right}else done=!0;return null},Tree.prototype.next=function(d){var root=this._root,successor=null;if(d.right){for(successor=d.right;successor.left;)successor=successor.left;return successor}for(var comparator=this._comparator;root;){var cmp=comparator(d.key,root.key);if(0===cmp)break;cmp<0?(successor=root,root=root.left):root=root.right}return successor},Tree.prototype.prev=function(d){var root=this._root,predecessor=null;if(null!==d.left){for(predecessor=d.left;predecessor.right;)predecessor=predecessor.right;return predecessor}for(var comparator=this._comparator;root;){var cmp=comparator(d.key,root.key);if(0===cmp)break;cmp<0?root=root.left:(predecessor=root,root=root.right)}return predecessor},Tree.prototype.clear=function(){return this._root=null,this._size=0,this},Tree.prototype.toList=function(){return function(root){var current=root,Q=[],done=!1,head=new Node(null,null),p=head;for(;!done;)current?(Q.push(current),current=current.left):Q.length>0?current=(current=p=p.next=Q.pop()).right:done=!0;return p.next=null,head.next}(this._root)},Tree.prototype.load=function(keys,values,presort){void 0===values&&(values=[]),void 0===presort&&(presort=!1);var size=keys.length,comparator=this._comparator;if(presort&&function sort(keys,values,left,right,compare){if(left>=right)return;var pivot=keys[left+right>>1];var i=left-1;var j=right+1;for(;;){do{i++}while(compare(keys[i],pivot)<0);do{j--}while(compare(keys[j],pivot)>0);if(i>=j)break;var tmp=keys[i];keys[i]=keys[j],keys[j]=tmp,tmp=values[i],values[i]=values[j],values[j]=tmp}sort(keys,values,left,j,compare);sort(keys,values,j+1,right,compare)}(keys,values,0,size-1,comparator),null===this._root)this._root=function loadRecursive(keys,values,start,end){var size=end-start;if(size>0){var middle=start+Math.floor(size/2),key=keys[middle],data=values[middle],node=new Node(key,data);return node.left=loadRecursive(keys,values,start,middle),node.right=loadRecursive(keys,values,middle+1,end),node}return null}(keys,values,0,size),this._size=size;else{var mergedList=function(l1,l2,compare){var head=new Node(null,null),p=head,p1=l1,p2=l2;for(;null!==p1&&null!==p2;)compare(p1.key,p2.key)<0?(p.next=p1,p1=p1.next):(p.next=p2,p2=p2.next),p=p.next;null!==p1?p.next=p1:null!==p2&&(p.next=p2);return head.next}(this.toList(),function(keys,values){for(var head=new Node(null,null),p=head,i=0;i<keys.length;i++)p=p.next=new Node(keys[i],values[i]);return p.next=null,head.next}(keys,values),comparator);size=this._size+size,this._root=function sortedListToBST(list,start,end){var size=end-start;if(size>0){var middle=start+Math.floor(size/2),left=sortedListToBST(list,start,middle),root=list.head;return root.left=left,list.head=list.head.next,root.right=sortedListToBST(list,middle+1,end),root}return null}({head:mergedList},0,size)}return this},Tree.prototype.isEmpty=function(){return null===this._root},Object.defineProperty(Tree.prototype,"size",{get:function(){return this._size},enumerable:!0,configurable:!0}),Object.defineProperty(Tree.prototype,"root",{get:function(){return this._root},enumerable:!0,configurable:!0}),Tree.prototype.toString=function(printNode){void 0===printNode&&(printNode=function(n){return String(n.key)});var out=[];return function printRow(root,prefix,isTail,out,printNode){if(root){out(prefix+(isTail?"└── ":"├── ")+printNode(root)+"\n");var indent=prefix+(isTail?"    ":"│   ");root.left&&printRow(root.left,indent,!1,out,printNode),root.right&&printRow(root.right,indent,!0,out,printNode)}}(this._root,"",!0,function(v){return out.push(v)},printNode),out.join("")},Tree.prototype.update=function(key,newKey,newData){var comparator=this._comparator,_a=split(key,this._root,comparator),left=_a.left,right=_a.right;comparator(key,newKey)<0?right=insert(newKey,newData,right,comparator):left=insert(newKey,newData,left,comparator),this._root=function(left,right,comparator){return null===right?left:null===left?right:((right=splay(left.key,right,comparator)).left=left,right)}(left,right,comparator)},Tree.prototype.split=function(key){return split(key,this._root,this._comparator)},Tree}();var isInBbox=function(bbox,point){return bbox.ll.x<=point.x&&point.x<=bbox.ur.x&&bbox.ll.y<=point.y&&point.y<=bbox.ur.y},getBboxOverlap=function(b1,b2){if(b2.ur.x<b1.ll.x||b1.ur.x<b2.ll.x||b2.ur.y<b1.ll.y||b1.ur.y<b2.ll.y)return null;var lowerX=b1.ll.x<b2.ll.x?b2.ll.x:b1.ll.x,upperX=b1.ur.x<b2.ur.x?b1.ur.x:b2.ur.x;return{ll:{x:lowerX,y:b1.ll.y<b2.ll.y?b2.ll.y:b1.ll.y},ur:{x:upperX,y:b1.ur.y<b2.ur.y?b1.ur.y:b2.ur.y}}},epsilon=Number.EPSILON;void 0===epsilon&&(epsilon=Math.pow(2,-52));var EPSILON_SQ=epsilon*epsilon,cmp=function(a,b){if(-epsilon<a&&a<epsilon&&-epsilon<b&&b<epsilon)return 0;var ab=a-b;return ab*ab<EPSILON_SQ*a*b?0:a<b?-1:1},PtRounder=function(){function PtRounder(){_classCallCheck(this,PtRounder),this.reset()}return _createClass(PtRounder,[{key:"reset",value:function(){this.xRounder=new CoordRounder,this.yRounder=new CoordRounder}},{key:"round",value:function(x,y){return{x:this.xRounder.round(x),y:this.yRounder.round(y)}}}]),PtRounder}(),CoordRounder=function(){function CoordRounder(){_classCallCheck(this,CoordRounder),this.tree=new Tree,this.round(0)}return _createClass(CoordRounder,[{key:"round",value:function(coord){var node=this.tree.add(coord),prevNode=this.tree.prev(node);if(null!==prevNode&&0===cmp(node.key,prevNode.key))return this.tree.remove(coord),prevNode.key;var nextNode=this.tree.next(node);return null!==nextNode&&0===cmp(node.key,nextNode.key)?(this.tree.remove(coord),nextNode.key):coord}}]),CoordRounder}(),rounder=new PtRounder,crossProduct=function(a,b){return a.x*b.y-a.y*b.x},dotProduct=function(a,b){return a.x*b.x+a.y*b.y},compareVectorAngles=function(basePt,endPt1,endPt2){var v1={x:endPt1.x-basePt.x,y:endPt1.y-basePt.y},v2={x:endPt2.x-basePt.x,y:endPt2.y-basePt.y},kross=crossProduct(v1,v2);return cmp(kross,0)},length=function(v){return Math.sqrt(dotProduct(v,v))},horizontalIntersection=function(pt,v,y){return 0===v.y?null:{x:pt.x+v.x/v.y*(y-pt.y),y:y}},verticalIntersection=function(pt,v,x){return 0===v.x?null:{x:x,y:pt.y+v.y/v.x*(x-pt.x)}},SweepEvent=function(){function SweepEvent(point,isLeft){_classCallCheck(this,SweepEvent),void 0===point.events?point.events=[this]:point.events.push(this),this.point=point,this.isLeft=isLeft}return _createClass(SweepEvent,null,[{key:"compare",value:function(a,b){var ptCmp=SweepEvent.comparePoints(a.point,b.point);return 0!==ptCmp?ptCmp:(a.point!==b.point&&a.link(b),a.isLeft!==b.isLeft?a.isLeft?1:-1:Segment.compare(a.segment,b.segment))}},{key:"comparePoints",value:function(aPt,bPt){return aPt.x<bPt.x?-1:aPt.x>bPt.x?1:aPt.y<bPt.y?-1:aPt.y>bPt.y?1:0}}]),_createClass(SweepEvent,[{key:"link",value:function(other){if(other.point===this.point)throw new Error("Tried to link already linked events");for(var otherEvents=other.point.events,i=0,iMax=otherEvents.length;i<iMax;i++){var evt=otherEvents[i];this.point.events.push(evt),evt.point=this.point}this.checkForConsuming()}},{key:"checkForConsuming",value:function(){for(var numEvents=this.point.events.length,i=0;i<numEvents;i++){var evt1=this.point.events[i];if(void 0===evt1.segment.consumedBy)for(var j=i+1;j<numEvents;j++){var evt2=this.point.events[j];void 0===evt2.consumedBy&&(evt1.otherSE.point.events===evt2.otherSE.point.events&&evt1.segment.consume(evt2.segment))}}}},{key:"getAvailableLinkedEvents",value:function(){for(var events=[],i=0,iMax=this.point.events.length;i<iMax;i++){var evt=this.point.events[i];evt!==this&&!evt.segment.ringOut&&evt.segment.isInResult()&&events.push(evt)}return events}},{key:"getLeftmostComparator",value:function(baseEvent){var _this=this,cache=new Map,fillCache=function(linkedEvent){var pShared,pBase,pAngle,vBase,vAngle,nextEvent=linkedEvent.otherSE;cache.set(linkedEvent,{sine:(pShared=_this.point,pBase=baseEvent.point,pAngle=nextEvent.point,vBase={x:pBase.x-pShared.x,y:pBase.y-pShared.y},vAngle={x:pAngle.x-pShared.x,y:pAngle.y-pShared.y},crossProduct(vAngle,vBase)/length(vAngle)/length(vBase)),cosine:function(pShared,pBase,pAngle){var vBase={x:pBase.x-pShared.x,y:pBase.y-pShared.y},vAngle={x:pAngle.x-pShared.x,y:pAngle.y-pShared.y};return dotProduct(vAngle,vBase)/length(vAngle)/length(vBase)}(_this.point,baseEvent.point,nextEvent.point)})};return function(a,b){cache.has(a)||fillCache(a),cache.has(b)||fillCache(b);var _cache$get=cache.get(a),asine=_cache$get.sine,acosine=_cache$get.cosine,_cache$get2=cache.get(b),bsine=_cache$get2.sine,bcosine=_cache$get2.cosine;return asine>=0&&bsine>=0?acosine<bcosine?1:acosine>bcosine?-1:0:asine<0&&bsine<0?acosine<bcosine?-1:acosine>bcosine?1:0:bsine<asine?-1:bsine>asine?1:0}}}]),SweepEvent}(),segmentId=0,Segment=function(){function Segment(leftSE,rightSE,rings,windings){_classCallCheck(this,Segment),this.id=++segmentId,this.leftSE=leftSE,leftSE.segment=this,leftSE.otherSE=rightSE,this.rightSE=rightSE,rightSE.segment=this,rightSE.otherSE=leftSE,this.rings=rings,this.windings=windings}return _createClass(Segment,null,[{key:"compare",value:function(a,b){var alx=a.leftSE.point.x,blx=b.leftSE.point.x,arx=a.rightSE.point.x,brx=b.rightSE.point.x;if(brx<alx)return 1;if(arx<blx)return-1;var aly=a.leftSE.point.y,bly=b.leftSE.point.y,ary=a.rightSE.point.y,bry=b.rightSE.point.y;if(alx<blx){if(bly<aly&&bly<ary)return 1;if(bly>aly&&bly>ary)return-1;var aCmpBLeft=a.comparePoint(b.leftSE.point);if(aCmpBLeft<0)return 1;if(aCmpBLeft>0)return-1;var bCmpARight=b.comparePoint(a.rightSE.point);return 0!==bCmpARight?bCmpARight:-1}if(alx>blx){if(aly<bly&&aly<bry)return-1;if(aly>bly&&aly>bry)return 1;var bCmpALeft=b.comparePoint(a.leftSE.point);if(0!==bCmpALeft)return bCmpALeft;var aCmpBRight=a.comparePoint(b.rightSE.point);return aCmpBRight<0?1:aCmpBRight>0?-1:1}if(aly<bly)return-1;if(aly>bly)return 1;if(arx<brx){var _bCmpARight=b.comparePoint(a.rightSE.point);if(0!==_bCmpARight)return _bCmpARight}if(arx>brx){var _aCmpBRight=a.comparePoint(b.rightSE.point);if(_aCmpBRight<0)return 1;if(_aCmpBRight>0)return-1}if(arx!==brx){var ay=ary-aly,ax=arx-alx,by=bry-bly,bx=brx-blx;if(ay>ax&&by<bx)return 1;if(ay<ax&&by>bx)return-1}return arx>brx?1:arx<brx?-1:ary<bry?-1:ary>bry?1:a.id<b.id?-1:a.id>b.id?1:0}}]),_createClass(Segment,[{key:"replaceRightSE",value:function(newRightSE){this.rightSE=newRightSE,this.rightSE.segment=this,this.rightSE.otherSE=this.leftSE,this.leftSE.otherSE=this.rightSE}},{key:"bbox",value:function(){var y1=this.leftSE.point.y,y2=this.rightSE.point.y;return{ll:{x:this.leftSE.point.x,y:y1<y2?y1:y2},ur:{x:this.rightSE.point.x,y:y1>y2?y1:y2}}}},{key:"vector",value:function(){return{x:this.rightSE.point.x-this.leftSE.point.x,y:this.rightSE.point.y-this.leftSE.point.y}}},{key:"isAnEndpoint",value:function(pt){return pt.x===this.leftSE.point.x&&pt.y===this.leftSE.point.y||pt.x===this.rightSE.point.x&&pt.y===this.rightSE.point.y}},{key:"comparePoint",value:function(point){if(this.isAnEndpoint(point))return 0;var lPt=this.leftSE.point,rPt=this.rightSE.point,v=this.vector();if(lPt.x===rPt.x)return point.x===lPt.x?0:point.x<lPt.x?1:-1;var yDist=(point.y-lPt.y)/v.y,xFromYDist=lPt.x+yDist*v.x;if(point.x===xFromYDist)return 0;var xDist=(point.x-lPt.x)/v.x,yFromXDist=lPt.y+xDist*v.y;return point.y===yFromXDist?0:point.y<yFromXDist?-1:1}},{key:"getIntersection",value:function(other){var tBbox=this.bbox(),oBbox=other.bbox(),bboxOverlap=getBboxOverlap(tBbox,oBbox);if(null===bboxOverlap)return null;var tlp=this.leftSE.point,trp=this.rightSE.point,olp=other.leftSE.point,orp=other.rightSE.point,touchesOtherLSE=isInBbox(tBbox,olp)&&0===this.comparePoint(olp),touchesThisLSE=isInBbox(oBbox,tlp)&&0===other.comparePoint(tlp),touchesOtherRSE=isInBbox(tBbox,orp)&&0===this.comparePoint(orp),touchesThisRSE=isInBbox(oBbox,trp)&&0===other.comparePoint(trp);if(touchesThisLSE&&touchesOtherLSE)return touchesThisRSE&&!touchesOtherRSE?trp:!touchesThisRSE&&touchesOtherRSE?orp:null;if(touchesThisLSE)return touchesOtherRSE&&tlp.x===orp.x&&tlp.y===orp.y?null:tlp;if(touchesOtherLSE)return touchesThisRSE&&trp.x===olp.x&&trp.y===olp.y?null:olp;if(touchesThisRSE&&touchesOtherRSE)return null;if(touchesThisRSE)return trp;if(touchesOtherRSE)return orp;var pt=function(pt1,v1,pt2,v2){if(0===v1.x)return verticalIntersection(pt2,v2,pt1.x);if(0===v2.x)return verticalIntersection(pt1,v1,pt2.x);if(0===v1.y)return horizontalIntersection(pt2,v2,pt1.y);if(0===v2.y)return horizontalIntersection(pt1,v1,pt2.y);var kross=crossProduct(v1,v2);if(0==kross)return null;var ve={x:pt2.x-pt1.x,y:pt2.y-pt1.y},d1=crossProduct(ve,v1)/kross,d2=crossProduct(ve,v2)/kross;return{x:(pt1.x+d2*v1.x+(pt2.x+d1*v2.x))/2,y:(pt1.y+d2*v1.y+(pt2.y+d1*v2.y))/2}}(tlp,this.vector(),olp,other.vector());return null===pt?null:isInBbox(bboxOverlap,pt)?rounder.round(pt.x,pt.y):null}},{key:"split",value:function(point){var newEvents=[],alreadyLinked=void 0!==point.events,newLeftSE=new SweepEvent(point,!0),newRightSE=new SweepEvent(point,!1),oldRightSE=this.rightSE;this.replaceRightSE(newRightSE),newEvents.push(newRightSE),newEvents.push(newLeftSE);var newSeg=new Segment(newLeftSE,oldRightSE,this.rings.slice(),this.windings.slice());return SweepEvent.comparePoints(newSeg.leftSE.point,newSeg.rightSE.point)>0&&newSeg.swapEvents(),SweepEvent.comparePoints(this.leftSE.point,this.rightSE.point)>0&&this.swapEvents(),alreadyLinked&&(newLeftSE.checkForConsuming(),newRightSE.checkForConsuming()),newEvents}},{key:"swapEvents",value:function(){var tmpEvt=this.rightSE;this.rightSE=this.leftSE,this.leftSE=tmpEvt,this.leftSE.isLeft=!0,this.rightSE.isLeft=!1;for(var i=0,iMax=this.windings.length;i<iMax;i++)this.windings[i]*=-1}},{key:"consume",value:function(other){for(var consumer=this,consumee=other;consumer.consumedBy;)consumer=consumer.consumedBy;for(;consumee.consumedBy;)consumee=consumee.consumedBy;var cmp=Segment.compare(consumer,consumee);if(0!==cmp){if(cmp>0){var tmp=consumer;consumer=consumee,consumee=tmp}if(consumer.prev===consumee){var _tmp=consumer;consumer=consumee,consumee=_tmp}for(var i=0,iMax=consumee.rings.length;i<iMax;i++){var ring=consumee.rings[i],winding=consumee.windings[i],index=consumer.rings.indexOf(ring);-1===index?(consumer.rings.push(ring),consumer.windings.push(winding)):consumer.windings[index]+=winding}consumee.rings=null,consumee.windings=null,consumee.consumedBy=consumer,consumee.leftSE.consumedBy=consumer.leftSE,consumee.rightSE.consumedBy=consumer.rightSE}}},{key:"prevInResult",value:function(){return void 0!==this._prevInResult?this._prevInResult:(this.prev?this.prev.isInResult()?this._prevInResult=this.prev:this._prevInResult=this.prev.prevInResult():this._prevInResult=null,this._prevInResult)}},{key:"beforeState",value:function(){if(void 0!==this._beforeState)return this._beforeState;if(this.prev){var seg=this.prev.consumedBy||this.prev;this._beforeState=seg.afterState()}else this._beforeState={rings:[],windings:[],multiPolys:[]};return this._beforeState}},{key:"afterState",value:function(){if(void 0!==this._afterState)return this._afterState;var beforeState=this.beforeState();this._afterState={rings:beforeState.rings.slice(0),windings:beforeState.windings.slice(0),multiPolys:[]};for(var ringsAfter=this._afterState.rings,windingsAfter=this._afterState.windings,mpsAfter=this._afterState.multiPolys,i=0,iMax=this.rings.length;i<iMax;i++){var ring=this.rings[i],winding=this.windings[i],index=ringsAfter.indexOf(ring);-1===index?(ringsAfter.push(ring),windingsAfter.push(winding)):windingsAfter[index]+=winding}for(var polysAfter=[],polysExclude=[],_i=0,_iMax=ringsAfter.length;_i<_iMax;_i++)if(0!==windingsAfter[_i]){var _ring=ringsAfter[_i],poly=_ring.poly;if(-1===polysExclude.indexOf(poly))if(_ring.isExterior)polysAfter.push(poly);else{-1===polysExclude.indexOf(poly)&&polysExclude.push(poly);var _index=polysAfter.indexOf(_ring.poly);-1!==_index&&polysAfter.splice(_index,1)}}for(var _i2=0,_iMax2=polysAfter.length;_i2<_iMax2;_i2++){var mp=polysAfter[_i2].multiPoly;-1===mpsAfter.indexOf(mp)&&mpsAfter.push(mp)}return this._afterState}},{key:"isInResult",value:function(){if(this.consumedBy)return!1;if(void 0!==this._isInResult)return this._isInResult;var mpsBefore=this.beforeState().multiPolys,mpsAfter=this.afterState().multiPolys;switch(operation.type){case"union":var noBefores=0===mpsBefore.length,noAfters=0===mpsAfter.length;this._isInResult=noBefores!==noAfters;break;case"intersection":var least,most;mpsBefore.length<mpsAfter.length?(least=mpsBefore.length,most=mpsAfter.length):(least=mpsAfter.length,most=mpsBefore.length),this._isInResult=most===operation.numMultiPolys&&least<most;break;case"xor":var diff=Math.abs(mpsBefore.length-mpsAfter.length);this._isInResult=diff%2==1;break;case"difference":var isJustSubject=function(mps){return 1===mps.length&&mps[0].isSubject};this._isInResult=isJustSubject(mpsBefore)!==isJustSubject(mpsAfter);break;default:throw new Error("Unrecognized operation type found ".concat(operation.type))}return this._isInResult}}],[{key:"fromRing",value:function(pt1,pt2,ring){var leftPt,rightPt,winding,cmpPts=SweepEvent.comparePoints(pt1,pt2);if(cmpPts<0)leftPt=pt1,rightPt=pt2,winding=1;else{if(!(cmpPts>0))throw new Error("Tried to create degenerate segment at [".concat(pt1.x,", ").concat(pt1.y,"]"));leftPt=pt2,rightPt=pt1,winding=-1}return new Segment(new SweepEvent(leftPt,!0),new SweepEvent(rightPt,!1),[ring],[winding])}}]),Segment}(),RingIn=function(){function RingIn(geomRing,poly,isExterior){if(_classCallCheck(this,RingIn),!Array.isArray(geomRing)||0===geomRing.length)throw new Error("Input geometry is not a valid Polygon or MultiPolygon");if(this.poly=poly,this.isExterior=isExterior,this.segments=[],"number"!=typeof geomRing[0][0]||"number"!=typeof geomRing[0][1])throw new Error("Input geometry is not a valid Polygon or MultiPolygon");var firstPoint=rounder.round(geomRing[0][0],geomRing[0][1]);this.bbox={ll:{x:firstPoint.x,y:firstPoint.y},ur:{x:firstPoint.x,y:firstPoint.y}};for(var prevPoint=firstPoint,i=1,iMax=geomRing.length;i<iMax;i++){if("number"!=typeof geomRing[i][0]||"number"!=typeof geomRing[i][1])throw new Error("Input geometry is not a valid Polygon or MultiPolygon");var point=rounder.round(geomRing[i][0],geomRing[i][1]);point.x===prevPoint.x&&point.y===prevPoint.y||(this.segments.push(Segment.fromRing(prevPoint,point,this)),point.x<this.bbox.ll.x&&(this.bbox.ll.x=point.x),point.y<this.bbox.ll.y&&(this.bbox.ll.y=point.y),point.x>this.bbox.ur.x&&(this.bbox.ur.x=point.x),point.y>this.bbox.ur.y&&(this.bbox.ur.y=point.y),prevPoint=point)}firstPoint.x===prevPoint.x&&firstPoint.y===prevPoint.y||this.segments.push(Segment.fromRing(prevPoint,firstPoint,this))}return _createClass(RingIn,[{key:"getSweepEvents",value:function(){for(var sweepEvents=[],i=0,iMax=this.segments.length;i<iMax;i++){var segment=this.segments[i];sweepEvents.push(segment.leftSE),sweepEvents.push(segment.rightSE)}return sweepEvents}}]),RingIn}(),PolyIn=function(){function PolyIn(geomPoly,multiPoly){if(_classCallCheck(this,PolyIn),!Array.isArray(geomPoly))throw new Error("Input geometry is not a valid Polygon or MultiPolygon");this.exteriorRing=new RingIn(geomPoly[0],this,!0),this.bbox={ll:{x:this.exteriorRing.bbox.ll.x,y:this.exteriorRing.bbox.ll.y},ur:{x:this.exteriorRing.bbox.ur.x,y:this.exteriorRing.bbox.ur.y}},this.interiorRings=[];for(var i=1,iMax=geomPoly.length;i<iMax;i++){var ring=new RingIn(geomPoly[i],this,!1);ring.bbox.ll.x<this.bbox.ll.x&&(this.bbox.ll.x=ring.bbox.ll.x),ring.bbox.ll.y<this.bbox.ll.y&&(this.bbox.ll.y=ring.bbox.ll.y),ring.bbox.ur.x>this.bbox.ur.x&&(this.bbox.ur.x=ring.bbox.ur.x),ring.bbox.ur.y>this.bbox.ur.y&&(this.bbox.ur.y=ring.bbox.ur.y),this.interiorRings.push(ring)}this.multiPoly=multiPoly}return _createClass(PolyIn,[{key:"getSweepEvents",value:function(){for(var sweepEvents=this.exteriorRing.getSweepEvents(),i=0,iMax=this.interiorRings.length;i<iMax;i++)for(var ringSweepEvents=this.interiorRings[i].getSweepEvents(),j=0,jMax=ringSweepEvents.length;j<jMax;j++)sweepEvents.push(ringSweepEvents[j]);return sweepEvents}}]),PolyIn}(),MultiPolyIn=function(){function MultiPolyIn(geom,isSubject){if(_classCallCheck(this,MultiPolyIn),!Array.isArray(geom))throw new Error("Input geometry is not a valid Polygon or MultiPolygon");try{"number"==typeof geom[0][0][0]&&(geom=[geom])}catch(ex){}this.polys=[],this.bbox={ll:{x:Number.POSITIVE_INFINITY,y:Number.POSITIVE_INFINITY},ur:{x:Number.NEGATIVE_INFINITY,y:Number.NEGATIVE_INFINITY}};for(var i=0,iMax=geom.length;i<iMax;i++){var poly=new PolyIn(geom[i],this);poly.bbox.ll.x<this.bbox.ll.x&&(this.bbox.ll.x=poly.bbox.ll.x),poly.bbox.ll.y<this.bbox.ll.y&&(this.bbox.ll.y=poly.bbox.ll.y),poly.bbox.ur.x>this.bbox.ur.x&&(this.bbox.ur.x=poly.bbox.ur.x),poly.bbox.ur.y>this.bbox.ur.y&&(this.bbox.ur.y=poly.bbox.ur.y),this.polys.push(poly)}this.isSubject=isSubject}return _createClass(MultiPolyIn,[{key:"getSweepEvents",value:function(){for(var sweepEvents=[],i=0,iMax=this.polys.length;i<iMax;i++)for(var polySweepEvents=this.polys[i].getSweepEvents(),j=0,jMax=polySweepEvents.length;j<jMax;j++)sweepEvents.push(polySweepEvents[j]);return sweepEvents}}]),MultiPolyIn}(),RingOut=function(){function RingOut(events){_classCallCheck(this,RingOut),this.events=events;for(var i=0,iMax=events.length;i<iMax;i++)events[i].segment.ringOut=this;this.poly=null}return _createClass(RingOut,null,[{key:"factory",value:function(allSegments){for(var ringsOut=[],i=0,iMax=allSegments.length;i<iMax;i++){var segment=allSegments[i];if(segment.isInResult()&&!segment.ringOut){for(var prevEvent=null,event=segment.leftSE,nextEvent=segment.rightSE,events=[event],startingPoint=event.point,intersectionLEs=[];prevEvent=event,event=nextEvent,events.push(event),event.point!==startingPoint;)for(;;){var availableLEs=event.getAvailableLinkedEvents();if(0===availableLEs.length){var firstPt=events[0].point,lastPt=events[events.length-1].point;throw new Error("Unable to complete output ring starting at [".concat(firstPt.x,",")+" ".concat(firstPt.y,"]. Last matching segment found ends at")+" [".concat(lastPt.x,", ").concat(lastPt.y,"]."))}if(1===availableLEs.length){nextEvent=availableLEs[0].otherSE;break}for(var indexLE=null,j=0,jMax=intersectionLEs.length;j<jMax;j++)if(intersectionLEs[j].point===event.point){indexLE=j;break}if(null===indexLE){intersectionLEs.push({index:events.length,point:event.point});var comparator=event.getLeftmostComparator(prevEvent);nextEvent=availableLEs.sort(comparator)[0].otherSE;break}var intersectionLE=intersectionLEs.splice(indexLE)[0],ringEvents=events.splice(intersectionLE.index);ringEvents.unshift(ringEvents[0].otherSE),ringsOut.push(new RingOut(ringEvents.reverse()))}ringsOut.push(new RingOut(events))}}return ringsOut}}]),_createClass(RingOut,[{key:"getGeom",value:function(){for(var prevPt=this.events[0].point,points=[prevPt],i=1,iMax=this.events.length-1;i<iMax;i++){var _pt=this.events[i].point,_nextPt=this.events[i+1].point;0!==compareVectorAngles(_pt,prevPt,_nextPt)&&(points.push(_pt),prevPt=_pt)}if(1===points.length)return null;var pt=points[0],nextPt=points[1];0===compareVectorAngles(pt,prevPt,nextPt)&&points.shift(),points.push(points[0]);for(var step=this.isExteriorRing()?1:-1,iStart=this.isExteriorRing()?0:points.length-1,iEnd=this.isExteriorRing()?points.length:-1,orderedPoints=[],_i=iStart;_i!=iEnd;_i+=step)orderedPoints.push([points[_i].x,points[_i].y]);return orderedPoints}},{key:"isExteriorRing",value:function(){if(void 0===this._isExteriorRing){var enclosing=this.enclosingRing();this._isExteriorRing=!enclosing||!enclosing.isExteriorRing()}return this._isExteriorRing}},{key:"enclosingRing",value:function(){return void 0===this._enclosingRing&&(this._enclosingRing=this._calcEnclosingRing()),this._enclosingRing}},{key:"_calcEnclosingRing",value:function(){for(var leftMostEvt=this.events[0],i=1,iMax=this.events.length;i<iMax;i++){var evt=this.events[i];SweepEvent.compare(leftMostEvt,evt)>0&&(leftMostEvt=evt)}for(var prevSeg=leftMostEvt.segment.prevInResult(),prevPrevSeg=prevSeg?prevSeg.prevInResult():null;;){if(!prevSeg)return null;if(!prevPrevSeg)return prevSeg.ringOut;if(prevPrevSeg.ringOut!==prevSeg.ringOut)return prevPrevSeg.ringOut.enclosingRing()!==prevSeg.ringOut?prevSeg.ringOut:prevSeg.ringOut.enclosingRing();prevPrevSeg=(prevSeg=prevPrevSeg.prevInResult())?prevSeg.prevInResult():null}}}]),RingOut}(),PolyOut=function(){function PolyOut(exteriorRing){_classCallCheck(this,PolyOut),this.exteriorRing=exteriorRing,exteriorRing.poly=this,this.interiorRings=[]}return _createClass(PolyOut,[{key:"addInterior",value:function(ring){this.interiorRings.push(ring),ring.poly=this}},{key:"getGeom",value:function(){var geom=[this.exteriorRing.getGeom()];if(null===geom[0])return null;for(var i=0,iMax=this.interiorRings.length;i<iMax;i++){var ringGeom=this.interiorRings[i].getGeom();null!==ringGeom&&geom.push(ringGeom)}return geom}}]),PolyOut}(),MultiPolyOut=function(){function MultiPolyOut(rings){_classCallCheck(this,MultiPolyOut),this.rings=rings,this.polys=this._composePolys(rings)}return _createClass(MultiPolyOut,[{key:"getGeom",value:function(){for(var geom=[],i=0,iMax=this.polys.length;i<iMax;i++){var polyGeom=this.polys[i].getGeom();null!==polyGeom&&geom.push(polyGeom)}return geom}},{key:"_composePolys",value:function(rings){for(var polys=[],i=0,iMax=rings.length;i<iMax;i++){var ring=rings[i];if(!ring.poly)if(ring.isExteriorRing())polys.push(new PolyOut(ring));else{var enclosingRing=ring.enclosingRing();enclosingRing.poly||polys.push(new PolyOut(enclosingRing)),enclosingRing.poly.addInterior(ring)}}return polys}}]),MultiPolyOut}(),SweepLine=function(){function SweepLine(queue){var comparator=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Segment.compare;_classCallCheck(this,SweepLine),this.queue=queue,this.tree=new Tree(comparator),this.segments=[]}return _createClass(SweepLine,[{key:"process",value:function(event){var segment=event.segment,newEvents=[];if(event.consumedBy)return event.isLeft?this.queue.remove(event.otherSE):this.tree.remove(segment),newEvents;var node=event.isLeft?this.tree.insert(segment):this.tree.find(segment);if(!node)throw new Error("Unable to find segment #".concat(segment.id," ")+"[".concat(segment.leftSE.point.x,", ").concat(segment.leftSE.point.y,"] -> ")+"[".concat(segment.rightSE.point.x,", ").concat(segment.rightSE.point.y,"] ")+"in SweepLine tree. Please submit a bug report.");for(var prevNode=node,nextNode=node,prevSeg=void 0,nextSeg=void 0;void 0===prevSeg;)null===(prevNode=this.tree.prev(prevNode))?prevSeg=null:void 0===prevNode.key.consumedBy&&(prevSeg=prevNode.key);for(;void 0===nextSeg;)null===(nextNode=this.tree.next(nextNode))?nextSeg=null:void 0===nextNode.key.consumedBy&&(nextSeg=nextNode.key);if(event.isLeft){var prevMySplitter=null;if(prevSeg){var prevInter=prevSeg.getIntersection(segment);if(null!==prevInter&&(segment.isAnEndpoint(prevInter)||(prevMySplitter=prevInter),!prevSeg.isAnEndpoint(prevInter)))for(var newEventsFromSplit=this._splitSafely(prevSeg,prevInter),i=0,iMax=newEventsFromSplit.length;i<iMax;i++)newEvents.push(newEventsFromSplit[i])}var nextMySplitter=null;if(nextSeg){var nextInter=nextSeg.getIntersection(segment);if(null!==nextInter&&(segment.isAnEndpoint(nextInter)||(nextMySplitter=nextInter),!nextSeg.isAnEndpoint(nextInter)))for(var _newEventsFromSplit=this._splitSafely(nextSeg,nextInter),_i=0,_iMax=_newEventsFromSplit.length;_i<_iMax;_i++)newEvents.push(_newEventsFromSplit[_i])}if(null!==prevMySplitter||null!==nextMySplitter){var mySplitter=null;if(null===prevMySplitter)mySplitter=nextMySplitter;else if(null===nextMySplitter)mySplitter=prevMySplitter;else{mySplitter=SweepEvent.comparePoints(prevMySplitter,nextMySplitter)<=0?prevMySplitter:nextMySplitter}this.queue.remove(segment.rightSE),newEvents.push(segment.rightSE);for(var _newEventsFromSplit2=segment.split(mySplitter),_i2=0,_iMax2=_newEventsFromSplit2.length;_i2<_iMax2;_i2++)newEvents.push(_newEventsFromSplit2[_i2])}newEvents.length>0?(this.tree.remove(segment),newEvents.push(event)):(this.segments.push(segment),segment.prev=prevSeg)}else{if(prevSeg&&nextSeg){var inter=prevSeg.getIntersection(nextSeg);if(null!==inter){if(!prevSeg.isAnEndpoint(inter))for(var _newEventsFromSplit3=this._splitSafely(prevSeg,inter),_i3=0,_iMax3=_newEventsFromSplit3.length;_i3<_iMax3;_i3++)newEvents.push(_newEventsFromSplit3[_i3]);if(!nextSeg.isAnEndpoint(inter))for(var _newEventsFromSplit4=this._splitSafely(nextSeg,inter),_i4=0,_iMax4=_newEventsFromSplit4.length;_i4<_iMax4;_i4++)newEvents.push(_newEventsFromSplit4[_i4])}}this.tree.remove(segment)}return newEvents}},{key:"_splitSafely",value:function(seg,pt){this.tree.remove(seg);var rightSE=seg.rightSE;this.queue.remove(rightSE);var newEvents=seg.split(pt);return newEvents.push(rightSE),void 0===seg.consumedBy&&this.tree.insert(seg),newEvents}}]),SweepLine}(),POLYGON_CLIPPING_MAX_QUEUE_SIZE=void 0!==process&&process.env.POLYGON_CLIPPING_MAX_QUEUE_SIZE||1e6,POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS=void 0!==process&&process.env.POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS||1e6,operation=new(function(){function Operation(){_classCallCheck(this,Operation)}return _createClass(Operation,[{key:"run",value:function(type,geom,moreGeoms){operation.type=type,rounder.reset();for(var multipolys=[new MultiPolyIn(geom,!0)],i=0,iMax=moreGeoms.length;i<iMax;i++)multipolys.push(new MultiPolyIn(moreGeoms[i],!1));if(operation.numMultiPolys=multipolys.length,"difference"===operation.type)for(var subject=multipolys[0],_i=1;_i<multipolys.length;)null!==getBboxOverlap(multipolys[_i].bbox,subject.bbox)?_i++:multipolys.splice(_i,1);if("intersection"===operation.type)for(var _i2=0,_iMax=multipolys.length;_i2<_iMax;_i2++)for(var mpA=multipolys[_i2],j=_i2+1,jMax=multipolys.length;j<jMax;j++)if(null===getBboxOverlap(mpA.bbox,multipolys[j].bbox))return[];for(var queue=new Tree(SweepEvent.compare),_i3=0,_iMax2=multipolys.length;_i3<_iMax2;_i3++)for(var sweepEvents=multipolys[_i3].getSweepEvents(),_j=0,_jMax=sweepEvents.length;_j<_jMax;_j++)if(queue.insert(sweepEvents[_j]),queue.size>POLYGON_CLIPPING_MAX_QUEUE_SIZE)throw new Error("Infinite loop when putting segment endpoints in a priority queue (queue size too big). Please file a bug report.");for(var sweepLine=new SweepLine(queue),prevQueueSize=queue.size,node=queue.pop();node;){var evt=node.key;if(queue.size===prevQueueSize){var seg=evt.segment;throw new Error("Unable to pop() ".concat(evt.isLeft?"left":"right"," SweepEvent ")+"[".concat(evt.point.x,", ").concat(evt.point.y,"] from segment #").concat(seg.id," ")+"[".concat(seg.leftSE.point.x,", ").concat(seg.leftSE.point.y,"] -> ")+"[".concat(seg.rightSE.point.x,", ").concat(seg.rightSE.point.y,"] from queue. ")+"Please file a bug report.")}if(queue.size>POLYGON_CLIPPING_MAX_QUEUE_SIZE)throw new Error("Infinite loop when passing sweep line over endpoints (queue size too big). Please file a bug report.");if(sweepLine.segments.length>POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS)throw new Error("Infinite loop when passing sweep line over endpoints (too many sweep line segments). Please file a bug report.");for(var newEvents=sweepLine.process(evt),_i4=0,_iMax3=newEvents.length;_i4<_iMax3;_i4++){var _evt=newEvents[_i4];void 0===_evt.consumedBy&&queue.insert(_evt)}prevQueueSize=queue.size,node=queue.pop()}rounder.reset();var ringsOut=RingOut.factory(sweepLine.segments);return new MultiPolyOut(ringsOut).getGeom()}}]),Operation}());return{union:function(geom){for(var _len=arguments.length,moreGeoms=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++)moreGeoms[_key-1]=arguments[_key];return operation.run("union",geom,moreGeoms)},intersection:function(geom){for(var _len2=arguments.length,moreGeoms=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++)moreGeoms[_key2-1]=arguments[_key2];return operation.run("intersection",geom,moreGeoms)},xor:function(geom){for(var _len3=arguments.length,moreGeoms=new Array(_len3>1?_len3-1:0),_key3=1;_key3<_len3;_key3++)moreGeoms[_key3-1]=arguments[_key3];return operation.run("xor",geom,moreGeoms)},difference:function(subjectGeom){for(var _len4=arguments.length,clippingGeoms=new Array(_len4>1?_len4-1:0),_key4=1;_key4<_len4;_key4++)clippingGeoms[_key4-1]=arguments[_key4];return operation.run("difference",subjectGeom,clippingGeoms)}}},"object"==typeof exports&&void 0!==module?module.exports=factory():(global="undefined"!=typeof globalThis?globalThis:global||self).polygonClipping=factory()}).call(this)}).call(this,require("_process"))},{_process:71}],71:[function(require,module,exports){var cachedSetTimeout,cachedClearTimeout,process=module.exports={};function defaultSetTimout(){throw new Error("setTimeout has not been defined")}function defaultClearTimeout(){throw new Error("clearTimeout has not been defined")}function runTimeout(fun){if(cachedSetTimeout===setTimeout)return setTimeout(fun,0);if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout)return cachedSetTimeout=setTimeout,setTimeout(fun,0);try{return cachedSetTimeout(fun,0)}catch(e){try{return cachedSetTimeout.call(null,fun,0)}catch(e){return cachedSetTimeout.call(this,fun,0)}}}!function(){try{cachedSetTimeout="function"==typeof setTimeout?setTimeout:defaultSetTimout}catch(e){cachedSetTimeout=defaultSetTimout}try{cachedClearTimeout="function"==typeof clearTimeout?clearTimeout:defaultClearTimeout}catch(e){cachedClearTimeout=defaultClearTimeout}}();var currentQueue,queue=[],draining=!1,queueIndex=-1;function cleanUpNextTick(){draining&&currentQueue&&(draining=!1,currentQueue.length?queue=currentQueue.concat(queue):queueIndex=-1,queue.length&&drainQueue())}function drainQueue(){if(!draining){var timeout=runTimeout(cleanUpNextTick);draining=!0;for(var len=queue.length;len;){for(currentQueue=queue,queue=[];++queueIndex<len;)currentQueue&&currentQueue[queueIndex].run();queueIndex=-1,len=queue.length}currentQueue=null,draining=!1,function(marker){if(cachedClearTimeout===clearTimeout)return clearTimeout(marker);if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout)return cachedClearTimeout=clearTimeout,clearTimeout(marker);try{cachedClearTimeout(marker)}catch(e){try{return cachedClearTimeout.call(null,marker)}catch(e){return cachedClearTimeout.call(this,marker)}}}(timeout)}}function Item(fun,array){this.fun=fun,this.array=array}function noop(){}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1)for(var i=1;i<arguments.length;i++)args[i-1]=arguments[i];queue.push(new Item(fun,args)),1!==queue.length||draining||runTimeout(drainQueue)},Item.prototype.run=function(){this.fun.apply(null,this.array)},process.title="browser",process.browser=!0,process.env={},process.argv=[],process.version="",process.versions={},process.on=noop,process.addListener=noop,process.once=noop,process.off=noop,process.removeListener=noop,process.removeAllListeners=noop,process.emit=noop,process.prependListener=noop,process.prependOnceListener=noop,process.listeners=function(name){return[]},process.binding=function(name){throw new Error("process.binding is not supported")},process.cwd=function(){return"/"},process.chdir=function(dir){throw new Error("process.chdir is not supported")},process.umask=function(){return 0}},{}],72:[function(require,module,exports){var t,i;t=this,i=function(){"use strict";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1);t(n,r,Math.max(e,Math.floor(r-s*f/o+u)),Math.min(a,Math.floor(r+(o-s)*f/o+u)),h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r},"object"==typeof exports&&void 0!==module?module.exports=i():(t=t||self).RBush=i()},{}],73:[function(require,module,exports){"use strict";var $Object=Object,$TypeError=TypeError;module.exports=function(){if(null!=this&&this!==$Object(this))throw new $TypeError("RegExp.prototype.flags getter called on non-object");var result="";return this.global&&(result+="g"),this.ignoreCase&&(result+="i"),this.multiline&&(result+="m"),this.dotAll&&(result+="s"),this.unicode&&(result+="u"),this.sticky&&(result+="y"),result}},{}],74:[function(require,module,exports){"use strict";var define=require("define-properties"),callBind=require("call-bind"),implementation=require("./implementation"),getPolyfill=require("./polyfill"),shim=require("./shim"),flagsBound=callBind(implementation);define(flagsBound,{getPolyfill:getPolyfill,implementation:implementation,shim:shim}),module.exports=flagsBound},{"./implementation":73,"./polyfill":75,"./shim":76,"call-bind":43,"define-properties":46}],75:[function(require,module,exports){"use strict";var implementation=require("./implementation"),supportsDescriptors=require("define-properties").supportsDescriptors,$gOPD=Object.getOwnPropertyDescriptor,$TypeError=TypeError;module.exports=function(){if(!supportsDescriptors)throw new $TypeError("RegExp.prototype.flags requires a true ES5 environment that supports property descriptors");if("gim"===/a/gim.flags){var descriptor=$gOPD(RegExp.prototype,"flags");if(descriptor&&"function"==typeof descriptor.get&&"boolean"==typeof/a/.dotAll)return descriptor.get}return implementation}},{"./implementation":73,"define-properties":46}],76:[function(require,module,exports){"use strict";var supportsDescriptors=require("define-properties").supportsDescriptors,getPolyfill=require("./polyfill"),gOPD=Object.getOwnPropertyDescriptor,defineProperty=Object.defineProperty,TypeErr=TypeError,getProto=Object.getPrototypeOf,regex=/a/;module.exports=function(){if(!supportsDescriptors||!getProto)throw new TypeErr("RegExp.prototype.flags requires a true ES5 environment that supports property descriptors");var polyfill=getPolyfill(),proto=getProto(regex),descriptor=gOPD(proto,"flags");return descriptor&&descriptor.get===polyfill||defineProperty(proto,"flags",{configurable:!0,enumerable:!1,get:polyfill}),polyfill}},{"./polyfill":75,"define-properties":46}],77:[function(require,module,exports){var t;t=this,function(t){"use strict";const e=134217729;function r(t,e,n,r,o){let f,i,u,c,s=e[0],a=r[0],d=0,l=0;a>s==a>-s?(f=s,s=e[++d]):(f=a,a=r[++l]);let p=0;if(d<t&&l<n)for(a>s==a>-s?(u=f-((i=s+f)-s),s=e[++d]):(u=f-((i=a+f)-a),a=r[++l]),f=i,0!==u&&(o[p++]=u);d<t&&l<n;)a>s==a>-s?(u=f-((i=f+s)-(c=i-f))+(s-c),s=e[++d]):(u=f-((i=f+a)-(c=i-f))+(a-c),a=r[++l]),f=i,0!==u&&(o[p++]=u);for(;d<t;)u=f-((i=f+s)-(c=i-f))+(s-c),s=e[++d],f=i,0!==u&&(o[p++]=u);for(;l<n;)u=f-((i=f+a)-(c=i-f))+(a-c),a=r[++l],f=i,0!==u&&(o[p++]=u);return 0===f&&0!==p||(o[p++]=f),p}function o(t){return new Float64Array(t)}const c=o(4),s=o(8),a=o(12),d=o(16),l=o(4);t.orient2d=function(t,o,p,b,y,h){const M=(o-h)*(p-y),x=(t-y)*(b-h),j=M-x;if(0===M||0===x||M>0!=x>0)return j;const m=Math.abs(M+x);return Math.abs(j)>=3.3306690738754716e-16*m?j:-function(t,o,f,p,b,y,h){let M,x,j,m,_,v,w,A,F,O,P,g,k,q,z,B,C,D;const E=t-b,G=f-b,H=o-y,I=p-y;_=(z=(A=E-(w=(v=e*E)-(v-E)))*(O=I-(F=(v=e*I)-(v-I)))-((q=E*I)-w*F-A*F-w*O))-(P=z-(C=(A=H-(w=(v=e*H)-(v-H)))*(O=G-(F=(v=e*G)-(v-G)))-((B=H*G)-w*F-A*F-w*O))),c[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),c[1]=k-(P+_)+(_-B),_=(D=g+P)-g,c[2]=g-(D-_)+(P-_),c[3]=D;let J=function(t,e){let n=e[0];for(let r=1;r<4;r++)n+=e[r];return n}(0,c),K=2.2204460492503146e-16*h;if(J>=K||-J>=K)return J;if(M=t-(E+(_=t-E))+(_-b),j=f-(G+(_=f-G))+(_-b),x=o-(H+(_=o-H))+(_-y),m=p-(I+(_=p-I))+(_-y),0===M&&0===x&&0===j&&0===m)return J;if(K=1.1093356479670487e-31*h+3.3306690738754706e-16*Math.abs(J),(J+=E*m+I*M-(H*j+G*x))>=K||-J>=K)return J;_=(z=(A=M-(w=(v=e*M)-(v-M)))*(O=I-(F=(v=e*I)-(v-I)))-((q=M*I)-w*F-A*F-w*O))-(P=z-(C=(A=x-(w=(v=e*x)-(v-x)))*(O=G-(F=(v=e*G)-(v-G)))-((B=x*G)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const L=r(4,c,4,l,s);_=(z=(A=E-(w=(v=e*E)-(v-E)))*(O=m-(F=(v=e*m)-(v-m)))-((q=E*m)-w*F-A*F-w*O))-(P=z-(C=(A=H-(w=(v=e*H)-(v-H)))*(O=j-(F=(v=e*j)-(v-j)))-((B=H*j)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const N=r(L,s,4,l,a);_=(z=(A=M-(w=(v=e*M)-(v-M)))*(O=m-(F=(v=e*m)-(v-m)))-((q=M*m)-w*F-A*F-w*O))-(P=z-(C=(A=x-(w=(v=e*x)-(v-x)))*(O=j-(F=(v=e*j)-(v-j)))-((B=x*j)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const Q=r(N,a,4,l,d);return d[Q-1]}(t,o,p,b,y,h,m)},t.orient2dfast=function(t,e,n,r,o,f){return(e-f)*(n-o)-(t-o)*(r-f)},Object.defineProperty(t,"__esModule",{value:!0})}("object"==typeof exports&&void 0!==module?exports:(t=t||self).predicates={})},{}],78:[function(require,module,exports){var global,factory;global=this,factory=function(){"use strict";var TinyQueue=function(data,compare){if(void 0===data&&(data=[]),void 0===compare&&(compare=defaultCompare),this.data=data,this.length=this.data.length,this.compare=compare,this.length>0)for(var i=(this.length>>1)-1;i>=0;i--)this._down(i)};function defaultCompare(a,b){return a<b?-1:a>b?1:0}return TinyQueue.prototype.push=function(item){this.data.push(item),this.length++,this._up(this.length-1)},TinyQueue.prototype.pop=function(){if(0!==this.length){var top=this.data[0],bottom=this.data.pop();return this.length--,this.length>0&&(this.data[0]=bottom,this._down(0)),top}},TinyQueue.prototype.peek=function(){return this.data[0]},TinyQueue.prototype._up=function(pos){for(var data=this.data,compare=this.compare,item=data[pos];pos>0;){var parent=pos-1>>1,current=data[parent];if(compare(item,current)>=0)break;data[pos]=current,pos=parent}data[pos]=item},TinyQueue.prototype._down=function(pos){for(var data=this.data,compare=this.compare,halfLength=this.length>>1,item=data[pos];pos<halfLength;){var left=1+(pos<<1),best=data[left],right=left+1;if(right<this.length&&compare(data[right],best)<0&&(left=right,best=data[right]),compare(best,item)>=0)break;data[pos]=best,pos=left}data[pos]=item},TinyQueue},"object"==typeof exports&&void 0!==module?module.exports=factory():(global=global||self).TinyQueue=factory()},{}],79:[function(require,module,exports){module.exports={meta:require("@turf/meta"),helpers:require("@turf/helpers"),invariant:require("@turf/invariant"),bearing:require("@turf/bearing"),distance:require("@turf/distance"),length:require("@turf/length"),booleanEqual:require("@turf/boolean-equal"),destination:require("@turf/destination"),booleanPointInPolygon:require("@turf/boolean-point-in-polygon"),polygonTangents:require("@turf/polygon-tangents"),transformScale:require("@turf/transform-scale"),tesselate:require("@turf/tesselate"),union:require("@turf/union"),envelope:require("@turf/envelope"),bbox:require("@turf/bbox"),bboxClip:require("@turf/bbox-clip"),bboxPolygon:require("@turf/bbox-polygon"),booleanContains:require("@turf/boolean-contains"),booleanOverlap:require("@turf/boolean-overlap"),booleanPointInPolygon:require("@turf/boolean-point-in-polygon"),pointToLineDistance:require("@turf/point-to-line-distance"),sector:require("@turf/sector"),explode:require("@turf/explode"),convex:require("@turf/convex"),circle:require("@turf/circle"),midpoint:require("@turf/midpoint"),simplify:require("@turf/simplify")}},{"@turf/bbox":4,"@turf/bbox-clip":1,"@turf/bbox-polygon":3,"@turf/bearing":5,"@turf/boolean-contains":6,"@turf/boolean-equal":7,"@turf/boolean-overlap":8,"@turf/boolean-point-in-polygon":9,"@turf/circle":13,"@turf/convex":16,"@turf/destination":17,"@turf/distance":18,"@turf/envelope":19,"@turf/explode":20,"@turf/helpers":21,"@turf/invariant":22,"@turf/length":23,"@turf/meta":28,"@turf/midpoint":29,"@turf/point-to-line-distance":32,"@turf/polygon-tangents":33,"@turf/sector":37,"@turf/simplify":38,"@turf/tesselate":39,"@turf/transform-scale":40,"@turf/union":41}]},{},[79])(79)});
